<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Psi.Data</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Psi.Data.Annotations.Annotation">
            <summary>
            Represents an annotation instance.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.Annotation.Values">
            <summary>
            Gets or sets the collection of values in the annotation.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Data.Annotations.AnnotationDefinition">
            <summary>
            Represents a definition of an enumeration.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.AnnotationDefinition.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Annotations.AnnotationDefinition"/> class.
            </summary>
            <param name="name">The name of the annotation definition.</param>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.AnnotationDefinition.SchemaDefinitions">
            <summary>
            Gets the collection of schema definitions in the annotation definition.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.AnnotationDefinition.Name">
            <summary>
            Gets the name of the annotation definition.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.AnnotationDefinition.Load(System.String)">
            <summary>
            Loads an annotation definition from disk.
            </summary>
            <param name="fileName">The full path and filename of the annotation definition to load.</param>
            <returns>The requested annotation definition if it exists, otherwise null.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.AnnotationDefinition.ContainsSchemaDefinition(System.String)">
            <summary>
            Gets a value indicating whether this annotation definition contains an annotation schema definition with a specified name.
            </summary>
            <param name="schemaDefinitionName">The name of the schem a definition to search for.</param>
            <returns>True if the annotation difinition contains an annotation schema definition with the specified name, otherwise returns false.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.AnnotationDefinition.GetSchemaDefinition(System.String)">
            <summary>
            Gets a specified annotation schema definition.
            </summary>
            <param name="schemaDefinitionName">The name of the schem a definition to search for.</param>
            <returns>The requested annotation schema definition if it exists in this annotation definition, otherwise null.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.AnnotationDefinition.AddSchemaDefinition(Microsoft.Psi.Data.Annotations.AnnotationSchemaDefinition)">
            <summary>
            Adds a new annotation schema definition to this annotation definition.
            </summary>
            <param name="schemaDefinition">The annotation schema definition to add to the collection.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.AnnotationDefinition.CreateTimeIntervalAnnotation(Microsoft.Psi.TimeInterval)">
            <summary>
            Creates a new time interval annotation instance based on this annotation definition.
            </summary>
            <param name="timeInterval">The annotation's interval.</param>
            <returns>A new time interval annotation.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.AnnotationDefinition.Save(System.String)">
            <summary>
            Saves this annotation definition to disk.
            </summary>
            <param name="fileName">The full path and filename of the location to save this annotation definition.</param>
        </member>
        <member name="T:Microsoft.Psi.Data.Annotations.AnnotationSchemaDefinition">
            <summary>
            Represents an annotation schema definition.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.AnnotationSchemaDefinition.#ctor(System.String,Microsoft.Psi.Data.Annotations.IAnnotationSchema)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Annotations.AnnotationSchemaDefinition"/> class.
            </summary>
            <param name="name">The name of the annotation schema definition.</param>
            <param name="schema">The schema of the annotation schema definition.</param>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.AnnotationSchemaDefinition.Name">
            <summary>
            Gets or sets the name of the schema defintion.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.AnnotationSchemaDefinition.Schema">
            <summary>
            Gets or sets the annotation schema.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Data.Annotations.AnnotationSchemaValueMetadata">
            <summary>
            Represents the metadata associated with a schema value.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.AnnotationSchemaValueMetadata.BorderColor">
            <summary>
            Gets or sets the color for drawing the annotation area's border.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.AnnotationSchemaValueMetadata.FillColor">
            <summary>
            Gets or sets the color for drawing the annotation area's interior.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.AnnotationSchemaValueMetadata.TextColor">
            <summary>
            Gets or sets the color for drawing the annotation's text.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.AnnotationSchemaValueMetadata.BorderWidth">
            <summary>
            Gets or sets the width of the annotation's border.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.AnnotationSchemaValueMetadata.Description">
            <summary>
            Gets or sets a description of the value.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Data.Annotations.AnnotationSchema`1">
            <summary>
            Represents an annotation schema.
            </summary>
            <typeparam name="T">The datatype of the values contained in the schema.</typeparam>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.AnnotationSchema`1.#ctor(System.String,`0,Microsoft.Psi.Data.Annotations.AnnotationSchemaValueMetadata)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Annotations.AnnotationSchema`1"/> class.
            </summary>
            <param name="name">The name of the finite annotation schema.</param>
            <param name="defaultValue">The default value for new instances of the schema.</param>
            <param name="metadata">The metadata to use for all values in the schema unless overridden by a specific value's metadata.</param>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.AnnotationSchema`1.Name">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.AnnotationSchema`1.DefaultValue">
            <summary>
            Gets or sets the default value for this annotation schema.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.AnnotationSchema`1.Metadata">
            <summary>
            Gets or sets the metadata associated with the finite annotation schema value.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.AnnotationSchema`1.IsFiniteAnnotationSchema">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.AnnotationSchema`1.GetMetadata(`0)">
            <summary>
            Gets the schema metadata for a given schema value.
            </summary>
            <param name="value">The value for which to retrieve the schema value metadata.</param>
            <returns>The metadata for the schema value, or null if the valule is not valid.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.AnnotationSchema`1.IsValid(`0)">
            <summary>
            Determines whether a value is a valid schema value.
            </summary>
            <param name="value">The value to validate.</param>
            <returns>True if the value is a valid schema value, otherwise false.</returns>
        </member>
        <member name="T:Microsoft.Psi.Data.Annotations.FiniteAnnotationSchemaValue`1">
            <summary>
            Represents a value in a finite annotation schema.
            </summary>
            <typeparam name="T">The datatype of the value.</typeparam>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.FiniteAnnotationSchemaValue`1.#ctor(`0,Microsoft.Psi.Data.Annotations.AnnotationSchemaValueMetadata)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Annotations.FiniteAnnotationSchemaValue`1"/> class.
            </summary>
            <param name="value">The value of the schema value.</param>
            <param name="metadata">The metadata for the value, or null if the schema's metadata should be used.</param>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.FiniteAnnotationSchemaValue`1.Value">
            <summary>
            Gets or sets the schema value.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.FiniteAnnotationSchemaValue`1.Metadata">
            <summary>
            Gets or sets the metadata associated with the finite annotation schema value.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Data.Annotations.FiniteAnnotationSchema`1">
            <summary>
            Represents a finite annotation schema.
            </summary>
            <typeparam name="T">The datatype of the values in the schema.</typeparam>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.FiniteAnnotationSchema`1.#ctor(System.String,System.Collections.Generic.List{Microsoft.Psi.Data.Annotations.FiniteAnnotationSchemaValue{`0}},`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Annotations.FiniteAnnotationSchema`1"/> class.
            </summary>
            <param name="name">The name of the finite annotation schema.</param>
            <param name="schemaValues">The collection of values for the schema.</param>
            <param name="defaultValue">The default value for new instances of the schema.</param>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.FiniteAnnotationSchema`1.IsFiniteAnnotationSchema">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.FiniteAnnotationSchema`1.SchemaValues">
            <summary>
            Gets or sets the list of schema values in the schema.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.FiniteAnnotationSchema`1.Values">
            <summary>
            Gets the collection of valid values for the finite annotation.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.FiniteAnnotationSchema`1.IsValid(`0)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.FiniteAnnotationSchema`1.GetMetadata(`0)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.FiniteAnnotationSchema`1.SetMetadata(`0,Microsoft.Psi.Data.Annotations.AnnotationSchemaValueMetadata)">
            <summary>
            Sets the metadata for a given annotation schema value.
            </summary>
            <param name="value">The schema value for which to set the metadata.</param>
            <param name="metadata">The metadata to associate with the value.</param>
        </member>
        <member name="T:Microsoft.Psi.Data.Annotations.IAnnotationSchema">
            <summary>
            Represents an annotation schema.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.IAnnotationSchema.Name">
            <summary>
            Gets the name of the schema.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.IAnnotationSchema.IsFiniteAnnotationSchema">
            <summary>
            Gets a value indicating whether the annotation schema is a finite annotation schema.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Data.Annotations.TimeIntervalAnnotation">
            <summary>
            Represents an instance of a time interval annotation.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.TimeIntervalAnnotation.#ctor(Microsoft.Psi.TimeInterval,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Annotations.TimeIntervalAnnotation"/> class.
            </summary>
            <param name="interval">The interval over which the annotation occurs.</param>
            <param name="values">The list of values for the annotation.</param>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.TimeIntervalAnnotation.Interval">
            <summary>
            Gets or sets the interval over which this annotation occurs.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Data.Converters.JsonColorConverter">
            <summary>
            Represents a JSON color converter.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Converters.JsonColorConverter.CanConvert(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Psi.Data.Converters.JsonColorConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Psi.Data.Converters.JsonColorConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Psi.Data.Converters.RelativePathConverter">
            <summary>
            Provides methods to convert a full path to a relative path and vice-versa during JSON serialization.
            </summary>
            <remarks>
            The root path to which converted paths should be made relative is passed in the serializer StreamingContext.
            In addition, the StreamingContext state File flag should be set, or no conversion will take place.
            </remarks>
        </member>
        <member name="M:Microsoft.Psi.Data.Converters.RelativePathConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.String,System.Boolean,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Psi.Data.Converters.RelativePathConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.String,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Psi.Data.Dataset">
            <summary>
            Represents a dataset (collection of sessions) to be reasoned over.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Data.Dataset.DefaultName">
            <summary>
            Default name of a dataset.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Dataset.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Dataset"/> class.
            </summary>
            <param name="name">The name of the new dataset. Default is <see cref="F:Microsoft.Psi.Data.Dataset.DefaultName"/>.</param>
        </member>
        <member name="P:Microsoft.Psi.Data.Dataset.Name">
            <summary>
            Gets or sets the name of this dataset.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Dataset.OriginatingTimeInterval">
            <summary>
            Gets the originating time interval (earliest to latest) of the messages in this dataset.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Dataset.Size">
            <summary>
            Gets the size of the dataset, in bytes.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Dataset.StreamCount">
            <summary>
            Gets the number of streams in the dataset.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Dataset.Sessions">
            <summary>
            Gets the collection of sessions in this dataset.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Dataset.Load(System.String)">
            <summary>
            Loads a dataset from the specified file.
            </summary>
            <param name="filename">The name of the file that contains the dataset to be loaded.</param>
            <returns>The newly loaded dataset.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Dataset.CreateFromStore(Microsoft.Psi.Data.IStreamReader,System.String,System.String)">
            <summary>
            Creates a new dataset from an existing data store.
            </summary>
            <param name="streamReader">The stream reader of the data store.</param>
            <param name="sessionName">The session name (optional, defaults to streamReader.Name).</param>
            <param name="partitionName">The partition name (optional, defaults to streamReader.).</param>
            <returns>The newly created dataset.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Dataset.CreateSession(System.String)">
            <summary>
            Creates a new session within the dataset.
            </summary>
            <param name="sessionName">The session name.</param>
            <returns>The newly created session.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Dataset.RemoveSession(Microsoft.Psi.Data.Session)">
            <summary>
            Removes the specified session from the dataset.
            </summary>
            <param name="session">The session to remove.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.Dataset.Append(Microsoft.Psi.Data.Dataset)">
            <summary>
            Appends sessions from an input dataset to this dataset.
            </summary>
            <param name="inputDataset">The dataset to append from.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.Dataset.Save(System.String,System.Boolean)">
            <summary>
            Saves this dataset to the specified file.
            </summary>
            <param name="filename">The name of the file to save this dataset into.</param>
            <param name="useRelativePaths">Indicates whether to use full or relative store paths.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.Dataset.AddSessionFromStore(Microsoft.Psi.Data.IStreamReader,System.String,System.String)">
            <summary>
            Creates and adds a session to this dataset using the specified parameters.
            </summary>
            <param name="streamReader">The stream reader of the data store.</param>
            <param name="sessionName">The name of the session (optional, defaults to streamReader.Name).</param>
            <param name="partitionName">The partition name.</param>
            <returns>The newly added session.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Dataset.ComputeDerived``1(System.Action{Microsoft.Psi.Pipeline,Microsoft.Psi.Data.SessionImporter,``0})">
            <summary>
            Compute derived results for each session in the dataset.
            </summary>
            <typeparam name="TResult">The type of data of the derived result.</typeparam>
            <param name="computeDerived">The action to be invoked to derive results.</param>
            <returns>List of results.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Dataset.CreateDerivedPartitionAsync(System.Action{Microsoft.Psi.Pipeline,Microsoft.Psi.Data.SessionImporter,Microsoft.Psi.Data.Exporter},System.String,System.Boolean,System.String,System.String,Microsoft.Psi.ReplayDescriptor,Microsoft.Psi.DeliveryPolicy,System.Boolean,System.IProgress{System.ValueTuple{System.String,System.Double}},System.Threading.CancellationToken)">
            <summary>
            Asynchronously computes a derived partition for each session in the dataset.
            </summary>
            <param name="computeDerived">The action to be invoked to compute derive partitions.</param>
            <param name="outputPartitionName">The name of the output partition to be created.</param>
            <param name="overwrite">An optional flag indicating whether the partition should be overwritten. Default is false.</param>
            <param name="outputStoreName">An optional name for the output data store. Default is the output partition name.</param>
            <param name="outputStorePath">An optional path for the output data store. Default is the path for the first partition in the session.</param>
            <param name="replayDescriptor">An optional replay descriptor to use when creating the derived partition.</param>
            <param name="deliveryPolicy">Pipeline-level delivery policy to use when creating the derived partition.</param>
            <param name="enableDiagnostics">Indicates whether to enable collecting and publishing diagnostics information on the Pipeline.Diagnostics stream.</param>
            <param name="progress">An optional progress object to be used for reporting progress.</param>
            <param name="cancellationToken">An optional token for canceling the asynchronous task.</param>
            <returns>A task that represents the asynchronous compute derive partition operation.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Dataset.CreateDerivedPartitionAsync(System.Action{Microsoft.Psi.Pipeline,Microsoft.Psi.Data.SessionImporter,Microsoft.Psi.Data.Exporter},System.String,System.Boolean,System.String,System.Func{Microsoft.Psi.Data.Session,System.String},Microsoft.Psi.ReplayDescriptor,Microsoft.Psi.DeliveryPolicy,System.Boolean,System.IProgress{System.ValueTuple{System.String,System.Double}},System.Threading.CancellationToken)">
            <summary>
            Asynchronously computes a derived partition for each session in the dataset.
            </summary>
            <param name="computeDerived">The action to be invoked to compute derive partitions.</param>
            <param name="outputPartitionName">The name of the output partition to be created.</param>
            <param name="overwrite">An optional flag indicating whether the partition should be overwritten. Default is false.</param>
            <param name="outputStoreName">An optional name for the output data store. Default is the output partition name.</param>
            <param name="outputStorePathFunction">An optional function to determine output store path for each given session. Default is the path for the first partition in the session.</param>
            <param name="replayDescriptor">An optional replay descriptor to use when creating the derived partition.</param>
            <param name="deliveryPolicy">Pipeline-level delivery policy to use when creating the derived partition.</param>
            <param name="enableDiagnostics">Indicates whether to enable collecting and publishing diagnostics information on the Pipeline.Diagnostics stream.</param>
            <param name="progress">An optional progress object to be used for reporting progress.</param>
            <param name="cancellationToken">An optional token for canceling the asynchronous task.</param>
            <returns>A task that represents the asynchronous compute derive partition operation.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Dataset.CreateDerivedPartitionAsync``1(System.Action{Microsoft.Psi.Pipeline,Microsoft.Psi.Data.SessionImporter,Microsoft.Psi.Data.Exporter,``0},``0,System.String,System.Boolean,System.String,System.String,Microsoft.Psi.ReplayDescriptor,Microsoft.Psi.DeliveryPolicy,System.Boolean,System.IProgress{System.ValueTuple{System.String,System.Double}},System.Threading.CancellationToken)">
            <summary>
            Asynchronously computes a derived partition for each session in the dataset.
            </summary>
            <typeparam name="TParameter">The type of parameter passed to the action.</typeparam>
            <param name="computeDerived">The action to be invoked to derive partitions.</param>
            <param name="parameter">The parameter to be passed to the action.</param>
            <param name="outputPartitionName">The output partition name to be created.</param>
            <param name="overwrite">Flag indicating whether the partition should be overwritten. Default is false.</param>
            <param name="outputStoreName">An optional name for the output data store. Default is the output partition name.</param>
            <param name="outputStorePath">An optional path for the output data store. Default is the path for the first partition in the session.</param>
            <param name="replayDescriptor">The replay descriptor to us.</param>
            <param name="deliveryPolicy">Pipeline-level delivery policy to use when creating the derived partition.</param>
            <param name="enableDiagnostics">Indicates whether to enable collecting and publishing diagnostics information on the Pipeline.Diagnostics stream.</param>
            <param name="progress">An object that can be used for reporting progress.</param>
            <param name="cancellationToken">A token for canceling the asynchronous task.</param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Dataset.CreateDerivedPartitionAsync``1(System.Action{Microsoft.Psi.Pipeline,Microsoft.Psi.Data.SessionImporter,Microsoft.Psi.Data.Exporter,``0},``0,System.String,System.Boolean,System.String,System.Func{Microsoft.Psi.Data.Session,System.String},Microsoft.Psi.ReplayDescriptor,Microsoft.Psi.DeliveryPolicy,System.Boolean,System.IProgress{System.ValueTuple{System.String,System.Double}},System.Threading.CancellationToken)">
            <summary>
            Asynchronously computes a derived partition for each session in the dataset.
            </summary>
            <typeparam name="TParameter">The type of parameter passed to the action.</typeparam>
            <param name="computeDerived">The action to be invoked to derive partitions.</param>
            <param name="parameter">The parameter to be passed to the action.</param>
            <param name="outputPartitionName">The name of the output partition to be created.</param>
            <param name="overwrite">An optional flag indicating whether the partition should be overwritten. Default is false.</param>
            <param name="outputStoreName">An optional name for the output data store. Default is the output partition name.</param>
            <param name="outputStorePathFunction">An optional function to determine output store path for each given session. Default is the path for the first partition in the session.</param>
            <param name="replayDescriptor">An optional replay descriptor to use when creating the derived partition.</param>
            <param name="deliveryPolicy">Pipeline-level delivery policy to use when creating the derived partition.</param>
            <param name="enableDiagnostics">Indicates whether to enable collecting and publishing diagnostics information on the Pipeline.Diagnostics stream.</param>
            <param name="progress">An optional progress object to be used for reporting progress.</param>
            <param name="cancellationToken">An optional token for canceling the asynchronous task.</param>
            <returns>A task that represents the asynchronous compute derive partition operation.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Dataset.AddSessionsFromPsiStores(System.String,System.String)">
            <summary>
            Adds sessions from data stores located in the specified path.
            </summary>
            <param name="path">The path that contains the data stores.</param>
            <param name="partitionName">The name of the partition to be added when adding a new session. Default is null.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.Dataset.AddSession(Microsoft.Psi.Data.Session)">
            <summary>
            Adds a session to this dataset and updates its originating time interval.
            </summary>
            <param name="session">The session to be added.</param>
        </member>
        <member name="T:Microsoft.Psi.Data.DatasetExtensions">
            <summary>
            Represents helper methods for working with \psi store datasets.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.DatasetExtensions.AddSessionFromPsiStore(Microsoft.Psi.Data.Dataset,System.String,System.String,System.String,System.String)">
            <summary>
            Creates and adds a session to this dataset using the specified parameters.
            </summary>
            <param name="dataset">This dataset.</param>
            <param name="storeName">The name of the application that generated the persisted files, or the root name of the files.</param>
            <param name="storePath">The directory in which the main persisted file resides or will reside, or null to create a volatile data store.</param>
            <param name="sessionName">The name of the session (optional, defaults to streamReader.Name).</param>
            <param name="partitionName">The partition name.</param>
            <returns>The newly added session.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.DatasetExtensions.AddPsiStorePartition(Microsoft.Psi.Data.Session,System.String,System.String,System.String)">
            <summary>
            Creates and adds a data partition from an existing \psi data store.
            </summary>
            <param name="session">This session.</param>
            <param name="storeName">The name of the application that generated the persisted files, or the root name of the files.</param>
            <param name="storePath">The directory in which the main persisted file resides or will reside, or null to create a volatile data store.</param>
            <param name="partitionName">The partition name. Default is stream reader name.</param>
            <returns>The newly added data partition.</returns>
        </member>
        <member name="T:Microsoft.Psi.Data.Helpers.SafeSerializationBinder">
            <summary>
            Represents a JSON serialization binder that will only deserialize
            types in assemblies referenced directly by the application or
            assemblies that have been allowed to load by the user.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Helpers.SafeSerializationBinder.BindToName(System.Type,System.String@,System.String@)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Psi.Data.Helpers.SafeSerializationBinder.BindToType(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Psi.Data.IPartition">
            <summary>
            Defines a partition that can be added to a session.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.IPartition.Name">
            <summary>
            Gets or sets the partition name.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.IPartition.IsStoreValid">
            <summary>
            Gets a value indicating whether the the store for the partition is valid and readable.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.IPartition.OriginatingTimeInterval">
            <summary>
            Gets the originating time interval (earliest to latest) of the messages in this partition.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.IPartition.Size">
            <summary>
            Gets the size of the partition in bytes, if known.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.IPartition.StreamCount">
            <summary>
            Gets the number of streams in the partition, if known.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.IPartition.Session">
            <summary>
            Gets or sets the session that this partition belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.IPartition.StoreName">
            <summary>
            Gets the store name of this partition.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.IPartition.StorePath">
            <summary>
            Gets the store path of this partition.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.IPartition.StreamReaderTypeName">
            <summary>
            Gets the type name of the IStreamReader for this partition.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.IPartition.AvailableStreams">
            <summary>
            Gets an enumerable of stream metadata contained in this partition.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Data.ISimpleWriter">
            <summary>
            Defines an interface for all simple writers of data stores.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.ISimpleWriter.Name">
            <summary>
            Gets the name of the data store.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.ISimpleWriter.Path">
            <summary>
            Gets the path of the data store.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.ISimpleWriter.CreateStore(System.String,System.String,System.Boolean,Microsoft.Psi.Serialization.KnownSerializers)">
            <summary>
            Creates the specified store.
            </summary>
            <param name="name">The name of the application that generated the persisted files, or the root name of the files.</param>
            <param name="path">The directory in which the persisted file will reside.</param>
            <param name="createSubdirectory">If true, a numbered subdirectory is created for this store.</param>
            <param name="serializers">Optional set of serialization configuration (known types, serializers, known assemblies).</param>
        </member>
        <member name="M:Microsoft.Psi.Data.ISimpleWriter.CreateStream``1(Microsoft.Psi.IStreamMetadata,System.Collections.Generic.IEnumerable{Microsoft.Psi.Message{``0}})">
            <summary>
            Creates a stream of messages in the data store.
            </summary>
            <typeparam name="TData">The underlying type of the messaging in the data store.</typeparam>
            <param name="metadata">The metadata of the new stream.</param>
            <param name="source">The source of message to be written to the data store.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.ISimpleWriter.WriteAll(Microsoft.Psi.ReplayDescriptor,System.Threading.CancellationToken)">
            <summary>
            Writes all of the created streams to the data store.
            </summary>
            <param name="descriptor">Replay descriptor defining the bounds to write.</param>
            <param name="cancelationToken">The token to monitor for cancellation requests.</param>
        </member>
        <member name="T:Microsoft.Psi.Data.Json.JsonExporter">
            <summary>
            Component that writes messages to a multi-stream JSON store.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonExporter.#ctor(Microsoft.Psi.Pipeline,System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Json.JsonExporter"/> class.
            </summary>
            <param name="pipeline">The pipeline to add the component to.</param>
            <param name="name">The name of the application that generated the persisted files, or the root name of the files.</param>
            <param name="path">The directory in which the main persisted file resides or will reside, or null to create a volatile data store.</param>
            <param name="createSubdirectory">If true, a numbered sub-directory is created for this store.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonExporter.#ctor(Microsoft.Psi.Pipeline,System.String,Microsoft.Psi.Data.Json.JsonStoreWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Json.JsonExporter"/> class.
            </summary>
            <param name="pipeline">The pipeline to add the component to.</param>
            <param name="name">The name of the application that generated the persisted files, or the root name of the files.</param>
            <param name="writer">The underlying store writer.</param>
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonExporter.Name">
            <summary>
            Gets the name of the store being written to.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonExporter.Path">
            <summary>
            Gets the path to the store being written to if the store is persisted to disk, or null if the store is volatile.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonExporter.Dispose">
            <summary>
            Closes the store.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonExporter.Write``1(Microsoft.Psi.Emitter{``0},System.String,Microsoft.Psi.DeliveryPolicy{``0})">
            <summary>
            Writes the specified stream to this multi-stream store.
            </summary>
            <typeparam name="T">The type of messages in the stream.</typeparam>
            <param name="source">The source stream to write.</param>
            <param name="name">The name of the persisted stream.</param>
            <param name="deliveryPolicy">An optional delivery policy.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonExporter.Write(Microsoft.Psi.Emitter{Microsoft.Psi.Message{Newtonsoft.Json.Linq.JToken}},Microsoft.Psi.Data.Json.JsonStreamMetadata,Microsoft.Psi.DeliveryPolicy{Microsoft.Psi.Message{Newtonsoft.Json.Linq.JToken}})">
            <summary>
            Writes the specified stream to this multi-stream store.
            </summary>
            <param name="source">The source stream to write.</param>
            <param name="metadata">The stream metadata of the stream.</param>
            <param name="deliveryPolicy">An optional delivery policy.</param>
        </member>
        <member name="T:Microsoft.Psi.Data.Json.JsonGenerator">
            <summary>
            Defines a component that plays back data from a JSON store.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonGenerator.#ctor(Microsoft.Psi.Pipeline,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Json.JsonGenerator"/> class.
            </summary>
            <param name="pipeline">The pipeline to add the component to.</param>
            <param name="name">The name of the application that generated the persisted files, or the root name of the files.</param>
            <param name="path">The directory in which the main persisted file resides.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonGenerator.#ctor(Microsoft.Psi.Pipeline,Microsoft.Psi.Data.Json.JsonStoreReader)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Json.JsonGenerator"/> class.
            </summary>
            <param name="pipeline">The pipeline to add the component to.</param>
            <param name="reader">The underlying store reader.</param>
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonGenerator.Name">
            <summary>
            Gets the name of the application that generated the persisted files, or the root name of the files.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonGenerator.Path">
            <summary>
            Gets the directory in which the main persisted file resides.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonGenerator.AvailableStreams">
            <summary>
            Gets an enumerable of stream metadata contained in the underlying data store.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonGenerator.OriginatingTimeInterval">
            <summary>
            Gets the originating time interval (earliest to latest) of the messages in the underlying data store.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonGenerator.Contains(System.String)">
            <summary>
            Determines whether the underlying data store contains the specified stream.
            </summary>
            <param name="streamName">The name of the stream.</param>
            <returns>true if store contains the specified stream, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonGenerator.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonGenerator.GetMetadata(System.String)">
            <summary>
            Gets the stream metadata for the specified stream.
            </summary>
            <param name="streamName">The name of the stream.</param>
            <returns>The stream metadata.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonGenerator.OpenStream``1(System.String)">
            <summary>
            Opens the specified stream for reading and returns an emitter for use in the pipeline.
            </summary>
            <typeparam name="T">Type of data in underlying stream.</typeparam>
            <param name="streamName">The name of the stream.</param>
            <returns>The newly created emitter that generates messages from the stream of type <typeparamref name="T"/>.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonGenerator.GenerateNext(System.DateTime)">
            <summary>
            GenerateNext is called by the Generator base class when the next sample should be read.
            </summary>
            <param name="currentTime">The originating time of the message that triggered the current call to GenerateNext.</param>
            <returns>The originating time at which to read the next sample.</returns>
        </member>
        <member name="T:Microsoft.Psi.Data.Json.JsonSimpleWriter">
            <summary>
            Represents a simple writer for JSON data stores.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonSimpleWriter.#ctor(System.String,System.String,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Json.JsonSimpleWriter"/> class.
            </summary>
            <param name="name">The name of the application that generated the persisted files, or the root name of the files.</param>
            <param name="path">The directory in which the main persisted file resides or will reside, or null to create a volatile data store.</param>
            <param name="createSubdirectory">If true, a numbered subdirectory is created for this store.</param>
            <param name="extension">The extension for the underlying file.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonSimpleWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Json.JsonSimpleWriter"/> class.
            </summary>
            <param name="extension">The extension for the underlying file.</param>
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonSimpleWriter.Name">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonSimpleWriter.Path">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonSimpleWriter.Writer">
            <summary>
            Gets or sets the underlying store writer.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonSimpleWriter.CreateStore(System.String,System.String,System.Boolean,Microsoft.Psi.Serialization.KnownSerializers)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonSimpleWriter.CreateStream``1(Microsoft.Psi.IStreamMetadata,System.Collections.Generic.IEnumerable{Microsoft.Psi.Message{``0}})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonSimpleWriter.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonSimpleWriter.WriteAll(Microsoft.Psi.ReplayDescriptor,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Psi.Data.Json.JsonStore">
            <summary>
            Provides static methods to access multi-stream JSON stores.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStore.Create(Microsoft.Psi.Pipeline,System.String,System.String,System.Boolean)">
            <summary>
            Creates a new multi-stream JSON store and returns an <see cref="T:Microsoft.Psi.Data.Json.JsonExporter"/> instance which can be used to write streams to this store.
            </summary>
            <param name="pipeline">The <see cref="T:Microsoft.Psi.Pipeline"/> that owns the <see cref="T:Microsoft.Psi.Data.Json.JsonExporter"/>.</param>
            <param name="name">The name of the store to create.</param>
            <param name="rootPath">The path to use. If null, an in-memory store is created.</param>
            <param name="createSubdirectory">Indicates whether to create a numbered subdirectory for each execution of the pipeline.</param>
            <returns>An <see cref="T:Microsoft.Psi.Data.Json.JsonExporter"/> instance that can be used to write streams.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStore.Open(Microsoft.Psi.Pipeline,System.String,System.String)">
            <summary>
            Opens a JSON store for read and returns an <see cref="T:Microsoft.Psi.Data.Json.JsonGenerator"/> instance which can be used to inspect the store and open the streams.
            </summary>
            <param name="pipeline">The <see cref="T:Microsoft.Psi.Pipeline"/> that owns the <see cref="T:Microsoft.Psi.Data.Json.JsonGenerator"/>.</param>
            <param name="name">The name of the application that generated the persisted files, or the root name of the files.</param>
            <param name="path">The directory in which the main persisted file resides.</param>
            <returns>A <see cref="T:Microsoft.Psi.Data.Json.JsonGenerator"/> instance that can be used to open streams and read messages.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStore.Write``1(Microsoft.Psi.IProducer{``0},System.String,Microsoft.Psi.Data.Json.JsonExporter,Microsoft.Psi.DeliveryPolicy{``0})">
            <summary>
            Writes the specified stream to a multi-stream JSON store.
            </summary>
            <typeparam name="TIn">The type of messages in the stream.</typeparam>
            <param name="source">The source stream to write.</param>
            <param name="name">The name of the persisted stream.</param>
            <param name="writer">The store writer, created by e.g. <see cref="M:Microsoft.Psi.Data.Json.JsonStore.Create(Microsoft.Psi.Pipeline,System.String,System.String,System.Boolean)"/>.</param>
            <param name="deliveryPolicy">An optional delivery policy.</param>
            <returns>The input stream.</returns>
        </member>
        <member name="T:Microsoft.Psi.Data.Json.JsonStoreBase">
            <summary>
            Represents the common elements of JSON data stores.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Data.Json.JsonStoreBase.DefaultExtension">
            <summary>
            Default extension for the underlying file.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStoreBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Json.JsonStoreBase"/> class.
            </summary>
            <param name="extension">The extension for the underlying file.</param>
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStoreBase.Extension">
            <summary>
            Gets or sets the underlying file extension.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStoreBase.Name">
            <summary>
            Gets or sets the name of the data store.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStoreBase.Path">
            <summary>
            Gets or sets the path of the data store.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStoreBase.Serializer">
            <summary>
            Gets or sets the JSON serializer.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStoreBase.Dispose">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Psi.Data.Json.JsonStoreReader">
            <summary>
            Represents a reader for JSON data stores.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStoreReader.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Json.JsonStoreReader"/> class.
            </summary>
            <param name="name">The name of the application that generated the persisted files, or the root name of the files.</param>
            <param name="path">The directory in which the main persisted file resides or will reside, or null to create a volatile data store.</param>
            <param name="extension">The extension for the underlying file.</param>
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStoreReader.AvailableStreams">
            <summary>
            Gets an enumerable of stream metadata contained in the underlying data store.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStoreReader.OriginatingTimeInterval">
            <summary>
            Gets the originating time interval (earliest to latest) of the messages in the data store.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStoreReader.Size">
            <summary>
            Gets the size of the json store.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStoreReader.CloseStream(System.String)">
            <summary>
            Closes the specified stream.
            </summary>
            <param name="streamName">The name of the stream.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStoreReader.CloseStream(System.Int32)">
            <summary>
            Closes the specified stream.
            </summary>
            <param name="id">The id of the stream.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStoreReader.CloseAllStreams">
            <summary>
            Close all streams.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStoreReader.Contains(System.String)">
            <summary>
            Determines whether the data store contains the specified stream.
            </summary>
            <param name="streamName">The name of the stream.</param>
            <returns>true if store contains the specified stream, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStoreReader.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStoreReader.GetMetadata(System.String)">
            <summary>
            Gets the stream metadata for the specified stream.
            </summary>
            <param name="streamName">The name of the stream.</param>
            <returns>The stream metadata.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStoreReader.GetMetadata(System.Int32)">
            <summary>
            Gets the stream metadata for the specified stream.
            </summary>
            <param name="id">The id of the stream.</param>
            <returns>The stream metadata.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStoreReader.OpenStream(System.String)">
            <summary>
            Opens the stream for the specified stream.
            </summary>
            <param name="streamName">The name of the stream.</param>
            <returns>The stream metadata.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStoreReader.OpenStream(System.Int32)">
            <summary>
            Opens the stream for the specified stream.
            </summary>
            <param name="id">The id of the stream.</param>
            <returns>The stream metadata.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStoreReader.OpenStream(Microsoft.Psi.Data.Json.JsonStreamMetadata)">
            <summary>
            Opens the stream for the specified stream.
            </summary>
            <param name="metadata">The metadata of the stream.</param>
            <returns>true if the stream was opened; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStoreReader.MoveNext(Microsoft.Psi.Envelope@)">
            <summary>
            Positions the reader to the next message.
            </summary>
            <param name="envelope">The envelope associated with the message read.</param>
            <returns>True if there are more messages, false if no more messages are available.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStoreReader.Read(Newtonsoft.Json.Linq.JToken@)">
            <summary>
            Reads the next message from any one of the enabled streams (in serialized form) into the specified buffer.
            </summary>
            <param name="data">The data associated with the message read.</param>
            <returns>True if there are more messages, false if no more messages are available.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStoreReader.Seek(Microsoft.Psi.ReplayDescriptor)">
            <summary>
            Seek to envelope in stream according to specified replay descriptor.
            </summary>
            <param name="descriptor">The replay descriptor.</param>
        </member>
        <member name="T:Microsoft.Psi.Data.Json.JsonStoreWriter">
            <summary>
            Represents a writer for JSON data stores.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStoreWriter.#ctor(System.String,System.String,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Json.JsonStoreWriter"/> class.
            </summary>
            <param name="name">The name of the application that generated the persisted files, or the root name of the files.</param>
            <param name="path">The directory in which the main persisted file resides or will reside, or null to create a volatile data store.</param>
            <param name="createSubdirectory">If true, a numbered subdirectory is created for this store.</param>
            <param name="extension">The extension for the underlying file.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStoreWriter.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStoreWriter.OpenStream(Microsoft.Psi.Data.Json.JsonStreamMetadata)">
            <summary>
            Opens the stream for the specified stream.
            </summary>
            <param name="metadata">The metadata of the stream.</param>
            <returns>The stream metadata.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStoreWriter.OpenStream(System.Int32,System.String,System.String)">
            <summary>
            Opens the stream for the specified stream.
            </summary>
            <param name="streamId">The stream id.</param>
            <param name="streamName">The stream name.</param>
            <param name="typeName">The stream type name.</param>
            <returns>The stream metadata.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStoreWriter.Write(Newtonsoft.Json.Linq.JToken,Microsoft.Psi.Envelope)">
            <summary>
            Writes the next message to the data store.
            </summary>
            <param name="data">The data associated with the message write.</param>
            <param name="envelope">The envelope associated with the message write.</param>
        </member>
        <member name="T:Microsoft.Psi.Data.Json.JsonStreamMetadata">
            <summary>
            Represents metadata used in storing stream data in a JSON store.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStreamMetadata.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Json.JsonStreamMetadata"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStreamMetadata.#ctor(System.String,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Json.JsonStreamMetadata"/> class.
            </summary>
            <param name="name">The name of the stream the metadata represents.</param>
            <param name="id">The id of the stream the metadata represents.</param>
            <param name="typeName">The name of the type of data contained in the stream the metadata represents.</param>
            <param name="supplementalMetadataTypeName">The name of the type of supplemental metadata for the stream the metadata represents.</param>
            <param name="storeName">The name of the store containing the stream.</param>
            <param name="storePath">The path of the store containing the stream.</param>
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamMetadata.Name">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamMetadata.Id">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamMetadata.TypeName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamMetadata.StoreName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamMetadata.StorePath">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamMetadata.FirstMessageCreationTime">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamMetadata.LastMessageCreationTime">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamMetadata.FirstMessageOriginatingTime">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamMetadata.LastMessageOriginatingTime">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamMetadata.MessageCount">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamMetadata.MessageSizeCumulativeSum">
            <summary>
            Gets or sets the total size (bytes) of messages in the stream.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamMetadata.LatencyCumulativeSum">
            <summary>
            Gets or sets the cumulative sum of latencies of messages in the stream.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamMetadata.AverageMessageSize">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamMetadata.AverageMessageLatencyMs">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamMetadata.SupplementalMetadataTypeName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamMetadata.OpenedTime">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamMetadata.ClosedTime">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamMetadata.IsClosed">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStreamMetadata.GetSupplementalMetadata``1">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStreamMetadata.Update(Microsoft.Psi.Envelope,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStreamMetadata.Update(Microsoft.Psi.TimeInterval,Microsoft.Psi.TimeInterval)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Psi.Data.Json.JsonStreamReader">
            <summary>
            Represents a stream reader for JSON data stores.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStreamReader.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Json.JsonStreamReader"/> class.
            </summary>
            <param name="name">The name of the application that generated the persisted files, or the root name of the files.</param>
            <param name="path">The directory in which the main persisted file resides or will reside, or null to create a volatile data store.</param>
            <param name="extension">The extension for the underlying file.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStreamReader.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Json.JsonStreamReader"/> class.
            </summary>
            <param name="name">The name of the application that generated the persisted files, or the root name of the files.</param>
            <param name="path">The directory in which the main persisted file resides or will reside, or null to create a volatile data store.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStreamReader.#ctor(Microsoft.Psi.Data.Json.JsonStreamReader)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Json.JsonStreamReader"/> class.
            </summary>
            <param name="that">Existing <see cref="T:Microsoft.Psi.Data.Json.JsonStreamReader"/> used to initialize new instance.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStreamReader.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Json.JsonStreamReader"/> class.
            </summary>
            <param name="extension">The extension for the underlying file.</param>
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamReader.AvailableStreams">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamReader.Name">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamReader.Path">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamReader.MessageOriginatingTimeInterval">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamReader.MessageCreationTimeInterval">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamReader.StreamTimeInterval">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamReader.Size">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamReader.StreamCount">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamReader.Reader">
            <summary>
            Gets or sets the underlying store reader.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStreamReader.CloseAllStreams">
            <summary>
            Closes all open streams.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStreamReader.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStreamReader.OpenNew">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStreamReader.OpenStream``1(System.String,System.Action{``0,Microsoft.Psi.Envelope},System.Func{``0},System.Action{``0},System.Action{System.Runtime.Serialization.SerializationException})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStreamReader.OpenStreamIndex``1(System.String,System.Action{System.Func{Microsoft.Psi.Data.IStreamReader,``0},Microsoft.Psi.Envelope},System.Func{``0})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStreamReader.ReadAll(Microsoft.Psi.ReplayDescriptor,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStreamReader.Seek(Microsoft.Psi.TimeInterval,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStreamReader.MoveNext(Microsoft.Psi.Envelope@)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStreamReader.IsLive">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStreamReader.GetStreamMetadata(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStreamReader.GetSupplementalMetadata``1(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStreamReader.ContainsStream(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Psi.Data.Partition`1">
            <summary>
            Defines a base class of partitions that can be added to a session.
            </summary>
            <typeparam name="TStreamReader">Type of IStreamReader used to read partition.</typeparam>
        </member>
        <member name="M:Microsoft.Psi.Data.Partition`1.#ctor(Microsoft.Psi.Data.Session,`0,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Partition`1"/> class.
            </summary>
            <param name="session">The session that this partition belongs to.</param>
            <param name="streamReader">Stream reader used to read partition.</param>
            <param name="name">The partition name.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.Partition`1.#ctor(Microsoft.Psi.Data.Session,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Partition`1"/> class.
            </summary>
            <param name="session">The session that this partition belongs to.</param>
            <param name="storeName">The store name of this partition.</param>
            <param name="storePath">The store path of this partition.</param>
            <param name="streamReaderTypeName">Stream reader used to read partition.</param>
            <param name="name">The partition name.</param>
        </member>
        <member name="P:Microsoft.Psi.Data.Partition`1.Name">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Partition`1.IsStoreValid">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Partition`1.OriginatingTimeInterval">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Partition`1.Size">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Partition`1.StreamCount">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Partition`1.StreamReader">
            <summary>
            Gets the data store reader for this partition.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Partition`1.Session">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Partition`1.StoreName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Partition`1.StorePath">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Partition`1.StreamReaderTypeName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Partition`1.AvailableStreams">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.Partition`1.Dispose">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Psi.Data.Session">
            <summary>
            Represents a session (collection of partitions) to be reasoned over.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Data.Session.DefaultName">
            <summary>
            Default name of a session.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Session.#ctor(Microsoft.Psi.Data.Dataset,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Session"/> class.
            </summary>
            <param name="dataset">The dataset that this session belongs to.</param>
            <param name="name">The session name.</param>
        </member>
        <member name="P:Microsoft.Psi.Data.Session.Dataset">
            <summary>
            Gets the dataset that this session belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Session.Name">
            <summary>
            Gets or sets the session name.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Session.OriginatingTimeInterval">
            <summary>
            Gets the originating time interval (earliest to latest) of the messages in this session.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Session.Size">
            <summary>
            Gets the size of the session, in bytes.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Session.StreamCount">
            <summary>
            Gets the number of streams in the session.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Session.Partitions">
            <summary>
            Gets the collection of partitions in this session.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Session.AddStorePartition``1(``0,System.String)">
            <summary>
            Creates and adds a data partition from an existing data store.
            </summary>
            <typeparam name="TStreamReader">Type of IStreamReader used to read data store.</typeparam>
            <param name="streamReader">The stream reader of the data store.</param>
            <param name="partitionName">The partition name. Default is stream reader name.</param>
            <returns>The newly added data partition.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Session.CreateDerivedPartitionAsync(System.Action{Microsoft.Psi.Pipeline,Microsoft.Psi.Data.SessionImporter,Microsoft.Psi.Data.Exporter},System.String,System.Boolean,System.String,System.String,Microsoft.Psi.ReplayDescriptor,Microsoft.Psi.DeliveryPolicy,System.Boolean,System.IProgress{System.ValueTuple{System.String,System.Double}},System.Threading.CancellationToken)">
            <summary>
            Asynchronously computes a derived partition for this session.
            </summary>
            <param name="computeDerived">The action to be invoked to compute derive partitions.</param>
            <param name="outputPartitionName">The name of the output partition to be created.</param>
            <param name="overwrite">An optional flag indicating whether the partition should be overwritten. Default is false.</param>
            <param name="outputStoreName">An optional name for the output data store. Default is the output partition name.</param>
            <param name="outputStorePath">An optional path for the output data store. Default is the same path at the first partition in the session.</param>
            <param name="replayDescriptor">An optional replay descriptor to use when creating the derived partition.</param>
            <param name="deliveryPolicy">Pipeline-level delivery policy to use when creating the derived partition.</param>
            <param name="enableDiagnostics">Indicates whether to enable collecting and publishing diagnostics information on the Pipeline.Diagnostics stream.</param>
            <param name="progress">An optional progress object to be used for reporting progress.</param>
            <param name="cancellationToken">An optional token for canceling the asynchronous task.</param>
            <returns>A task that represents the asynchronous compute derive partition operation.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Session.CreateDerivedPartitionAsync``1(System.Action{Microsoft.Psi.Pipeline,Microsoft.Psi.Data.SessionImporter,Microsoft.Psi.Data.Exporter,``0},``0,System.String,System.Boolean,System.String,System.String,Microsoft.Psi.ReplayDescriptor,Microsoft.Psi.DeliveryPolicy,System.Boolean,System.IProgress{System.ValueTuple{System.String,System.Double}},System.Threading.CancellationToken)">
            <summary>
            Asynchronously computes a derived partition for this session.
            </summary>
            <typeparam name="TParameter">The type of parameter passed to the action.</typeparam>
            <param name="computeDerived">The action to be invoked to derive partitions.</param>
            <param name="parameter">The parameter to be passed to the action.</param>
            <param name="outputPartitionName">The name of the output partition to be created.</param>
            <param name="overwrite">An optional flag indicating whether the partition should be overwritten. Default is false.</param>
            <param name="outputStoreName">An optional name for the output data store. Default is the output partition name.</param>
            <param name="outputStorePath">An optional path for the output data store. Default is the same path at the first partition in the session.</param>
            <param name="replayDescriptor">An optional replay descriptor to use when creating the derived partition.</param>
            <param name="deliveryPolicy">Pipeline-level delivery policy to use when creating the derived partition.</param>
            <param name="enableDiagnostics">Indicates whether to enable collecting and publishing diagnostics information on the Pipeline.Diagnostics stream.</param>
            <param name="progress">An optional progress object to be used for reporting progress.</param>
            <param name="cancellationToken">An optional token for canceling the asynchronous task.</param>
            <returns>A task that represents the asynchronous compute derive partition operation.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Session.CreateDerivedPsiPartitionAsync``1(System.Action{Microsoft.Psi.Pipeline,Microsoft.Psi.Data.SessionImporter,Microsoft.Psi.Data.Exporter,``0},``0,System.String,System.Boolean,System.String,System.String,Microsoft.Psi.ReplayDescriptor,Microsoft.Psi.DeliveryPolicy,System.Boolean,System.IProgress{System.ValueTuple{System.String,System.Double}},System.Threading.CancellationToken)">
            <summary>
            Asynchronously computes a derived partition for the session.
            </summary>
            <typeparam name="TParameter">The type of parameter passed to the action.</typeparam>
            <param name="computeDerived">The action to be invoked to compute derive partitions.</param>
            <param name="parameter">The parameter to be passed to the action.</param>
            <param name="outputPartitionName">The name of the output partition to be created.</param>
            <param name="overwrite">An optional flag indicating whether the partition should be overwritten. Default is false.</param>
            <param name="outputStoreName">An optional name for the output data store. Default is null.</param>
            <param name="outputStorePath">An optional path for the output data store. Default is null.</param>
            <param name="replayDescriptor">An optional replay descriptor to use when creating the derived partition.</param>
            <param name="deliveryPolicy">Pipeline-level delivery policy to use when creating the derived partition.</param>
            <param name="enableDiagnostics">Indicates whether to enable collecting and publishing diagnostics information on the Pipeline.Diagnostics stream.</param>
            <param name="progress">An optional progress object to be used for reporting progress.</param>
            <param name="cancellationToken">An optional token for canceling the asynchronous task.</param>
            <returns>A task that represents the asynchronous compute derive partition operation.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Session.RemovePartition(Microsoft.Psi.Data.IPartition)">
            <summary>
            Removes a specified partition from the session.
            </summary>
            <param name="partition">The partition to remove.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.Session.AddPartition(Microsoft.Psi.Data.IPartition)">
            <summary>
            Adds a partition to this session and updates its originating time interval.
            </summary>
            <param name="partition">The partition to be added.</param>
        </member>
        <member name="T:Microsoft.Psi.Data.SessionImporter">
            <summary>
            Defines a class used in importing data into a session.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.SessionImporter.Name">
            <summary>
            Gets the name of the session.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.SessionImporter.MessageOriginatingTimeInterval">
            <summary>
            Gets the originating time interval (earliest to latest) of the messages in the session.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.SessionImporter.MessageCreationTimeInterval">
            <summary>
            Gets the interval between the creation time of the first and last message in the session.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.SessionImporter.StreamTimeInterval">
            <summary>
            Gets the interval between the opened and closed times, across all streams in the session.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.SessionImporter.PartitionImporters">
            <summary>
            Gets a dictionary of named importers.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.SessionImporter.Open(Microsoft.Psi.Pipeline,Microsoft.Psi.Data.Session,System.Boolean)">
            <summary>
            Opens a session importer.
            </summary>
            <param name="pipeline">Pipeline to use for imports.</param>
            <param name="session">Session to import into.</param>
            <param name="usePerStreamReaders">Optional flag indicating whether to use per-stream readers.</param>
            <returns>The newly created session importer.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.SessionImporter.HasStream(System.String)">
            <summary>
            Determines if any importer contains the named stream.
            </summary>
            <param name="streamName">The stream to search for.</param>
            <returns>true if any importer contains the named stream; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.SessionImporter.HasStream(System.String,System.String)">
            <summary>
            Determines if a specific importer contains the named stream.
            </summary>
            <param name="partitionName">Partition name of the specific importer.</param>
            <param name="streamName">The stream to search for.</param>
            <returns>true if the specific importer contains the named stream; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.SessionImporter.OpenStream``1(System.String,System.Func{``0},System.Action{``0})">
            <summary>
            Opens the first stream that matched the specified name.
            </summary>
            <typeparam name="T">The type of stream to open.</typeparam>
            <param name="streamName">The name of stream to open.</param>
            <param name="allocator">An optional allocator of messages.</param>
            <param name="deallocator">An optional deallocator to use after the messages have been sent out (defaults to disposing <see cref="T:System.IDisposable"/> messages.)</param>
            <returns>The opened stream.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.SessionImporter.OpenStream``1(System.String,System.String,System.Func{``0},System.Action{``0})">
            <summary>
            Opens the named stream in a specific partition.
            </summary>
            <typeparam name="T">The type of stream to open.</typeparam>
            <param name="partitionName">The partition to open stream in.</param>
            <param name="streamName">The name of stream to open.</param>
            <param name="allocator">An optional allocator of messages.</param>
            <param name="deallocator">An optional deallocator to use after the messages have been sent out (defaults to disposing <see cref="T:System.IDisposable"/> messages.)</param>
            <returns>The opened stream.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.SessionImporter.GetContainingUsages(System.String)">
            <summary>
            Gets list of importer names that contain the named stream.
            </summary>
            <param name="streamName">The stream to search for.</param>
            <returns>The list of importer names that contain the named stream.</returns>
        </member>
    </members>
</doc>
