<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Psi.Audio.Windows</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Psi.Audio.AudioCapture">
            <summary>
            Component that captures and streams audio from an input device such as a microphone.
            </summary>
            <remarks>
            This sensor component produces an audio output stream of type <see cref="T:Microsoft.Psi.Audio.AudioBuffer"/> which may be piped to
            downstream components for further processing and optionally saved to a data store. The audio input device from
            which to capture may be specified via the <see cref="P:Microsoft.Psi.Audio.AudioCaptureConfiguration.DeviceName"/> configuration
            parameter. The <see cref="M:Microsoft.Psi.Audio.AudioCapture.GetAvailableDevices"/> static method may be used to enumerate the names of audio
            input devices currently available on the system.
            <br/>
            **Please note**: This component uses Audio APIs that are available on Windows only.
            </remarks>
        </member>
        <member name="F:Microsoft.Psi.Audio.AudioCapture.configuration">
            <summary>
            The configuration for this component.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.AudioCapture.audioBuffers">
            <summary>
            The output stream of audio buffers.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.AudioCapture.wasapiCapture">
            <summary>
            The audio capture device.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.AudioCapture.buffer">
            <summary>
            The current audio capture buffer.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.AudioCapture.sourceFormat">
            <summary>
            The current source audio format.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.AudioCapture.lastPostedAudioTime">
            <summary>
            Keep track of the timestamp of the last audio buffer (computed from the value reported to us by the capture driver).
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.AudioCapture.#ctor(Microsoft.Psi.Pipeline,Microsoft.Psi.Audio.AudioCaptureConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Audio.AudioCapture"/> class.
            </summary>
            <param name="pipeline">The pipeline to add the component to.</param>
            <param name="configuration">The component configuration.</param>
        </member>
        <member name="M:Microsoft.Psi.Audio.AudioCapture.#ctor(Microsoft.Psi.Pipeline,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Audio.AudioCapture"/> class.
            </summary>
            <param name="pipeline">The pipeline to add the component to.</param>
            <param name="configurationFilename">The component configuration file.</param>
        </member>
        <member name="M:Microsoft.Psi.Audio.AudioCapture.#ctor(Microsoft.Psi.Pipeline,Microsoft.Psi.Audio.WaveFormat,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Audio.AudioCapture"/> class with a specified output format and device name.
            </summary>
            <param name="pipeline">The pipeline to add the component to.</param>
            <param name="outputFormat">The output format to use.</param>
            <param name="deviceName">The name of the audio device.</param>
        </member>
        <member name="P:Microsoft.Psi.Audio.AudioCapture.Out">
            <summary>
            Gets the output stream of audio buffers.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Audio.AudioCapture.AudioLevelInput">
            <summary>
            Gets the level control input.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Audio.AudioCapture.AudioLevel">
            <summary>
            Gets the output stream of audio level data.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Audio.AudioCapture.AudioDeviceName">
            <summary>
            Gets the name of the audio device.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Audio.AudioCapture.Configuration">
            <summary>
            Gets the configuration for this component.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.AudioCapture.GetAvailableDevices">
            <summary>
            Static method to get the available audio capture devices.
            </summary>
            <returns>
            An array of available capture device names.
            </returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.AudioCapture.SetAudioLevel(Microsoft.Psi.Message{System.Double})">
            <summary>
            Sets the audio level.
            </summary>
            <param name="level">The audio level.</param>
        </member>
        <member name="M:Microsoft.Psi.Audio.AudioCapture.Dispose">
            <summary>
            Dispose method.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.AudioCapture.Start(System.Action{System.DateTime})">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Psi.Audio.AudioCapture.Stop(System.DateTime,System.Action)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Psi.Audio.AudioCapture.HandleAudioDataAvailableEvent(System.Object,Microsoft.Psi.Audio.AudioDataEventArgs)">
            <summary>
            The event handler that processes new audio data packets.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Microsoft.Psi.Audio.AudioDataEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Microsoft.Psi.Audio.AudioCapture.HandleAudioVolumeNotification(System.Object,Microsoft.Psi.Audio.AudioVolumeEventArgs)">
            <summary>
            Handles volume notifications.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Microsoft.Psi.Audio.AudioVolumeEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Microsoft.Psi.Audio.AudioCaptureConfiguration">
            <summary>
            Represents the configuration for the <see cref="T:Microsoft.Psi.Audio.AudioCapture"/> component.
            </summary>
            <remarks>
            Use this class to configure a new instance of the <see cref="T:Microsoft.Psi.Audio.AudioCapture"/> component.
            Refer to the properties in this class for more information on the various configuration options.
            </remarks>
        </member>
        <member name="M:Microsoft.Psi.Audio.AudioCaptureConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Audio.AudioCaptureConfiguration"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Audio.AudioCaptureConfiguration.DeviceName">
            <summary>
            Gets or sets the name of the audio source device.
            </summary>
            <remarks>
            Use this to specify the name of the audio recording device from which to capture audio.
            To obtain a list of available recording devices on the system, use the
            <see cref="M:Microsoft.Psi.Audio.AudioCapture.GetAvailableDevices"/> static method. If not specified, the
            default recording device will be selected.
            </remarks>
        </member>
        <member name="P:Microsoft.Psi.Audio.AudioCaptureConfiguration.TargetLatencyInMs">
            <summary>
            Gets or sets the target audio latency (pull capture mode only).
            </summary>
            <remarks>
            In pull capture mode, this parameter determines the interval at which the audio engine is
            polled for new data. This in turn affects the latency of the captured audio (i.e. the amount
            of lag between when the audio was produced and when a captured <see cref="T:Microsoft.Psi.Audio.AudioBuffer"/> is
            output on the stream). The larger this value, the more audio data is captured at each interval,
            and the larger the audio latency. For live audio capture, we normally want this value to be as
            small as possible. By default, this value is set to 20 milliseconds. This value is ignored if
            <see cref="P:Microsoft.Psi.Audio.AudioCaptureConfiguration.UseEventDrivenCapture"/> is set to true. In event-driven capture mode, the latency
            is determined by the rate at which the audio engine signals that it has new data available.
            </remarks>
        </member>
        <member name="P:Microsoft.Psi.Audio.AudioCaptureConfiguration.AudioEngineBufferInMs">
            <summary>
            Gets or sets the audio engine buffer.
            </summary>
            <remarks>
            This parameter controls the amount of audio that the audio capture engine is able to
            buffer between reads. This determines the maximum delay that may be incurred between
            reading two consecutive audio buffers before an overrun occurs, which may lead to
            glitches due to loss of audio, and allows additional audio packets to be queued up
            in the engine should the application occasionally not be able to consume the captured
            audio packets fast enough. Setting this to a larger value reduces the likelihood of
            encountering glitches in the captured audio stream.
            </remarks>
        </member>
        <member name="P:Microsoft.Psi.Audio.AudioCaptureConfiguration.AudioLevel">
            <summary>
            Gets or sets the audio input level.
            </summary>
            <remarks>
            This is the initial level to set the audio recording device to. Valid values range
            between 0.0 and 1.0 inclusive. If not specified, the current level of the selected
            recording device will be left unchanged.
            </remarks>
        </member>
        <member name="P:Microsoft.Psi.Audio.AudioCaptureConfiguration.Gain">
            <summary>
            Gets or sets the additional gain to be applied to the captured audio.
            </summary>
            <remarks>
            This specifies an additional gain which may be applied computationally to the captured
            audio signal. Values greater than 1.0 boost the audio signal, while values in the range
            of 0.0 to 1.0 attenuate it. The default value is 1.0 (no additional gain).
            </remarks>
        </member>
        <member name="P:Microsoft.Psi.Audio.AudioCaptureConfiguration.OptimizeForSpeech">
            <summary>
            Gets or sets a value indicating whether the captured audio should be pre-processed for
            speech recognition applications. Available in Windows 10 Creators Update or later.
            </summary>
            <remarks>
            In later versions of Windows 10, the audio capture pipeline optionally enables additional
            signal processing to apply enhancements such as echo and noise suppression to optimize
            the audio for speech recognition applications. By default, this option is set to false.
            This feature may not be available for all capture devices.
            </remarks>
        </member>
        <member name="P:Microsoft.Psi.Audio.AudioCaptureConfiguration.UseEventDrivenCapture">
            <summary>
            Gets or sets a value indicating whether to use event-driven or pull capture mode. When using
            event-driven capture, audio is captured as soon as the audio engine signals that there is
            data available, instead of intervals determined by the <see cref="P:Microsoft.Psi.Audio.AudioCaptureConfiguration.TargetLatencyInMs"/>
            property. When this value is set to false, the audio engine is polled at an interval
            equal to the value specified by <see cref="P:Microsoft.Psi.Audio.AudioCaptureConfiguration.TargetLatencyInMs"/>. Additional data may be buffered
            by the audio engine (up to an amount equivalent to <see cref="P:Microsoft.Psi.Audio.AudioCaptureConfiguration.AudioEngineBufferInMs"/>) should
            the application be unable to consume the audio data quickly enough.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Audio.AudioCaptureConfiguration.DropOutOfOrderPackets">
            <summary>
            Gets or sets a value indicating whether the component should
            discard captured audio packets with an out-of-order timestamp.
            </summary>
            <remarks>
            This is for internal use only and may be removed in future versions.
            </remarks>
        </member>
        <member name="P:Microsoft.Psi.Audio.AudioCaptureConfiguration.Format">
            <summary>
            Gets or sets the desired format for the captured audio.
            </summary>
            <remarks>
            By default, audio will be captured in the default format of the audio recording device.
            Use this to specify a different format for the <see cref="T:Microsoft.Psi.Audio.AudioBuffer"/> Out stream of
            the <see cref="T:Microsoft.Psi.Audio.AudioCapture"/> component.
            </remarks>
        </member>
        <member name="T:Microsoft.Psi.Audio.AudioDataEventArgs">
            <summary>
            Defines the arguments for audio data events.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.AudioDataEventArgs.#ctor(System.Int64,System.IntPtr,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Audio.AudioDataEventArgs"/> class.
            </summary>
            <param name="timestamp">
            The timestamp of the first audio sample contained in data.
            </param>
            <param name="dataPtr">
            A pointer to the captured audio samples.
            </param>
            <param name="dataLength">
            The number of bytes of data available.
            </param>
        </member>
        <member name="P:Microsoft.Psi.Audio.AudioDataEventArgs.Timestamp">
            <summary>
            Gets or sets the timestamp (in 100-ns ticks since system boot) of the first audio sample contained in <see cref="N:Microsoft.Psi.Data"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Audio.AudioDataEventArgs.Data">
            <summary>
            Gets a pointer to the captured audio samples.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Audio.AudioDataEventArgs.Length">
            <summary>
            Gets or sets the number of bytes of data available.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Audio.AudioPlayer">
            <summary>
            Component that plays back an audio stream to an output device such as the speakers.
            </summary>
            <remarks>
            This output component renders an audio input stream of type <see cref="T:Microsoft.Psi.Audio.AudioBuffer"/> to the
            default or other specified audio output device for playback. The audio device on which to
            playback the output may be specified by name via the <see cref="P:Microsoft.Psi.Audio.AudioPlayerConfiguration.DeviceName"/>
            configuration parameter. The <see cref="M:Microsoft.Psi.Audio.AudioPlayer.GetAvailableDevices"/> static method may be used to
            enumerate the names of audio output devices currently available on the system.
            <br/>
            **Please note**: This component uses Audio APIs that are available on Windows only.
            </remarks>
        </member>
        <member name="F:Microsoft.Psi.Audio.AudioPlayer.wasapiRender">
            <summary>
            The audio render device.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.AudioPlayer.#ctor(Microsoft.Psi.Pipeline,Microsoft.Psi.Audio.AudioPlayerConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Audio.AudioPlayer"/> class.
            </summary>
            <param name="pipeline">The pipeline to add the component to.</param>
            <param name="configuration">The component configuration.</param>
        </member>
        <member name="M:Microsoft.Psi.Audio.AudioPlayer.#ctor(Microsoft.Psi.Pipeline,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Audio.AudioPlayer"/> class.
            </summary>
            <param name="pipeline">The pipeline to add the component to.</param>
            <param name="configurationFilename">The component configuration file.</param>
        </member>
        <member name="P:Microsoft.Psi.Audio.AudioPlayer.AudioLevelInput">
            <summary>
            Gets the receiver for the audio level stream which controls the volume of the output.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Audio.AudioPlayer.AudioLevel">
            <summary>
            Gets the stream containing the output audio level.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.AudioPlayer.GetAvailableDevices">
            <summary>
            Gets a list of available audio render devices.
            </summary>
            <returns>
            An array of available render device names.
            </returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.AudioPlayer.SetAudioLevel(Microsoft.Psi.Message{System.Double})">
            <summary>
            Sets the audio output level.
            </summary>
            <param name="level">The audio level.</param>
        </member>
        <member name="M:Microsoft.Psi.Audio.AudioPlayer.Receive(Microsoft.Psi.Message{Microsoft.Psi.Audio.AudioBuffer})">
            <summary>
            Receiver for the audio data.
            </summary>
            <param name="audioData">A buffer containing the next chunk of audio data.</param>
        </member>
        <member name="M:Microsoft.Psi.Audio.AudioPlayer.Dispose">
            <summary>
            Disposes the <see cref="T:Microsoft.Psi.Audio.AudioPlayer"/> object.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.AudioPlayer.Start(System.Action{System.DateTime})">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Psi.Audio.AudioPlayer.Stop(System.DateTime,System.Action)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Psi.Audio.AudioPlayer.HandleVolumeChangedNotification(System.Object,Microsoft.Psi.Audio.AudioVolumeEventArgs)">
            <summary>
            Handles volume changed notification events.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Microsoft.Psi.Audio.AudioVolumeEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Microsoft.Psi.Audio.AudioPlayerConfiguration">
            <summary>
            Represents the configuration for the <see cref="T:Microsoft.Psi.Audio.AudioPlayer"/> component.
            </summary>
            <remarks>
            Use this class to configure a new instance of the <see cref="T:Microsoft.Psi.Audio.AudioPlayer"/> component.
            Refer to the properties in this class for more information on the various configuration options.
            </remarks>
        </member>
        <member name="M:Microsoft.Psi.Audio.AudioPlayerConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Audio.AudioPlayerConfiguration"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Audio.AudioPlayerConfiguration.DeviceName">
            <summary>
            Gets or sets the name of the audio player device.
            </summary>
            <remarks>
            Use this to specify the name of the audio playback device on which to output audio.
            To obtain a list of available recording devices on the system, use the
            <see cref="M:Microsoft.Psi.Audio.AudioPlayer.GetAvailableDevices"/> static method. If not specified, the
            default playback device will be selected.
            </remarks>
        </member>
        <member name="P:Microsoft.Psi.Audio.AudioPlayerConfiguration.TargetLatencyInMs">
            <summary>
            Gets or sets the target audio latency.
            </summary>
            <remarks>
            This parameter controls the amount of audio to send to the audio device for playback
            at a time. This in turn determines the latency of the audio output (i.e. the amount of lag
            between when the audio was available and when the corresponding sound is produced). For
            live audio playback, we normally want this to be small. By default, this value is set to
            20 milliseconds. It is safe to leave this unchanged.
            </remarks>
        </member>
        <member name="P:Microsoft.Psi.Audio.AudioPlayerConfiguration.BufferLengthSeconds">
            <summary>
            Gets or sets the maximum duration of audio that can be buffered for playback.
            </summary>
            <remarks>
            This controls the amount of audio that can be buffered while waiting for the playback
            device to be ready to render it. The default value is 0.1 seconds.
            </remarks>
        </member>
        <member name="P:Microsoft.Psi.Audio.AudioPlayerConfiguration.AudioLevel">
            <summary>
            Gets or sets the audio output level.
            </summary>
            <remarks>
            This is the initial level to set the audio playback device to. Valid values range
            between 0.0 and 1.0 inclusive. If not specified, the current level of the selected
            playback device will be left unchanged.
            </remarks>
        </member>
        <member name="P:Microsoft.Psi.Audio.AudioPlayerConfiguration.Gain">
            <summary>
            Gets or sets the additional gain to be applied to the audio data.
            </summary>
            <remarks>
            This specifies an additional gain which may be applied computationally to the audio
            signal. Values greater than 1.0 boost the audio signal, while values in the range
            of 0.0 to 1.0 attenuate it. The default value is 1.0 (no additional gain).
            </remarks>
        </member>
        <member name="P:Microsoft.Psi.Audio.AudioPlayerConfiguration.Format">
            <summary>
            Gets or sets the input format of the audio stream.
            </summary>
            <remarks>
            This specifies the expected format of the audio arriving on the input stream. If not
            set, the <see cref="T:Microsoft.Psi.Audio.AudioPlayer"/> component will attempt to infer the audio format
            from the <see cref="T:Microsoft.Psi.Audio.AudioBuffer"/> messages arriving on the input stream.
            </remarks>
        </member>
        <member name="T:Microsoft.Psi.Audio.AudioResampler">
            <summary>
            Component that resamples an audio stream into a different format.
            </summary>
            <remarks>
            This component performs resampling on an audio stream of type <see cref="T:Microsoft.Psi.Audio.AudioBuffer"/> to convert it to an
            alternative format that may be required for consumption by downstream components. The audio format to convert
            to may be specified via the <see cref="P:Microsoft.Psi.Audio.AudioResamplerConfiguration.OutputFormat"/> configuration parameter in
            the form of a <see cref="T:Microsoft.Psi.Audio.WaveFormat"/> or <see cref="T:Microsoft.Psi.Audio.WaveFormatEx"/> value.
            <br/>
            **Please note**: This component uses Media APIs that are available on Windows only.
            </remarks>
        </member>
        <member name="F:Microsoft.Psi.Audio.AudioResampler.configuration">
            <summary>
            The configuration for this component.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.AudioResampler.resampler">
            <summary>
            The audio resampler.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.AudioResampler.currentInputFormat">
            <summary>
            The current input format.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.AudioResampler.buffer">
            <summary>
            The current resampled audio buffer.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.AudioResampler.lastOutputPostTime">
            <summary>
            The originating time of the last posted message.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.AudioResampler.#ctor(Microsoft.Psi.Pipeline,Microsoft.Psi.Audio.AudioResamplerConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Audio.AudioResampler"/> class.
            </summary>
            <param name="pipeline">The pipeline to add the component to.</param>
            <param name="configuration">The component configuration.</param>
        </member>
        <member name="M:Microsoft.Psi.Audio.AudioResampler.#ctor(Microsoft.Psi.Pipeline,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Audio.AudioResampler"/> class.
            </summary>
            <param name="pipeline">The pipeline to add the component to.</param>
            <param name="configurationFilename">The component configuration file.</param>
        </member>
        <member name="P:Microsoft.Psi.Audio.AudioResampler.Configuration">
            <summary>
            Gets the configuration for this component.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.AudioResampler.Dispose">
            <summary>
            Disposes the <see cref="T:Microsoft.Psi.Audio.AudioResampler"/> object.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.AudioResampler.Receive(Microsoft.Psi.Audio.AudioBuffer,Microsoft.Psi.Envelope)">
            <summary>
            Receiver for audio data.
            </summary>
            <param name="audioBuffer">A buffer containing the next chunk of audio data.</param>
            <param name="e">The message envelope for the audio data.</param>
        </member>
        <member name="M:Microsoft.Psi.Audio.AudioResampler.SetInputFormat(Microsoft.Psi.Audio.WaveFormat)">
            <summary>
            Resets the resampler and changes the input audio format.
            </summary>
            <param name="format">The audio format.</param>
        </member>
        <member name="M:Microsoft.Psi.Audio.AudioResampler.AudioDataAvailableCallback(System.IntPtr,System.Int32,System.Int64)">
            <summary>
            Callback function that is passed to resampler to call whenever it has
            new resampled audio data ready and waiting to be read.
            </summary>
            <param name="data">
            Pointer to the native buffer containing the new audio data.
            </param>
            <param name="length">
            The number of bytes of audio data available to be read.
            </param>
            <param name="timestamp">
            The timestamp in 100-ns ticks of the first sample in data.
            </param>
        </member>
        <member name="T:Microsoft.Psi.Audio.AudioResamplerConfiguration">
            <summary>
            Represents the configuration for the <see cref="T:Microsoft.Psi.Audio.AudioResampler"/> component.
            </summary>
            <remarks>
            Use this class to configure a new instance of the <see cref="T:Microsoft.Psi.Audio.AudioResampler"/> component.
            Refer to the properties in this class for more information on the various configuration options.
            </remarks>
        </member>
        <member name="M:Microsoft.Psi.Audio.AudioResamplerConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Audio.AudioResamplerConfiguration"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Audio.AudioResamplerConfiguration.TargetLatencyInMs">
            <summary>
            Gets or sets the target audio latency.
            </summary>
            <remarks>
            This parameter controls the amount of audio to resample and output at a time, which in
            turn determines the latency of the audio output. The larger this value, the more audio
            data is carried in each <see cref="T:Microsoft.Psi.Audio.AudioBuffer"/> and the longer the audio latency. For
            live audio capture, we normally want this value to be small as possible. By default,
            this value is set to 20 milliseconds. It is safe to leave this unchanged.
            </remarks>
        </member>
        <member name="P:Microsoft.Psi.Audio.AudioResamplerConfiguration.InputFormat">
            <summary>
            Gets or sets the input format of the audio stream to be resampled.
            </summary>
            <remarks>
            This specifies the expected format of the audio arriving on the input stream. If not
            set, the <see cref="T:Microsoft.Psi.Audio.AudioResampler"/> component will attempt to infer the audio format
            from the <see cref="T:Microsoft.Psi.Audio.AudioBuffer"/> messages arriving on the input stream.
            </remarks>
        </member>
        <member name="P:Microsoft.Psi.Audio.AudioResamplerConfiguration.OutputFormat">
            <summary>
            Gets or sets the output format for the resampled audio.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Audio.AudioVolumeEventArgs">
            <summary>
            Defines the arguments for audio volume events.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.AudioVolumeEventArgs.#ctor(System.Boolean,System.Single,System.Single[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Audio.AudioVolumeEventArgs"/> class.
            </summary>
            <param name="muted">A flag indicating whether the volume is muted.</param>
            <param name="masterVolume">The master volume level.</param>
            <param name="channelVolume">An array of channel volume levels.</param>
        </member>
        <member name="P:Microsoft.Psi.Audio.AudioVolumeEventArgs.Muted">
            <summary>
            Gets a value indicating whether the volume is muted.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Audio.AudioVolumeEventArgs.MasterVolume">
            <summary>
            Gets the master volume level.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Audio.AudioVolumeEventArgs.ChannelVolume">
            <summary>
            Gets an array of channel volume levels.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Audio.ComInterop.AudioClientBufferFlags">
            <summary>
            _AUDCLNT_BUFFERFLAGS enumeration (defined in AudioClient.h).
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.AudioClientBufferFlags.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.AudioClientBufferFlags.DataDiscontinuity">
            <summary>
            AUDCLNT_BUFFERFLAGS_DATA_DISCONTINUITY
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.AudioClientBufferFlags.Silent">
            <summary>
            AUDCLNT_BUFFERFLAGS_SILENT
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.AudioClientBufferFlags.TimestampError">
            <summary>
            AUDCLNT_BUFFERFLAGS_TIMESTAMP_ERROR
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Audio.ComInterop.AudioClientProperties">
            <summary>
            Audio client properties (defined in AudioClient.h).
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.AudioClientProperties.Size">
            <summary>
            cbSize.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.AudioClientProperties.IsOffload">
            <summary>
            bIsOffload.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.AudioClientProperties.Category">
            <summary>
            eCategory.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.AudioClientProperties.Options">
            <summary>
            Options.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Audio.ComInterop.AudioClientShareMode">
            <summary>
            AudioClientShareMode enumeration (defined in AudioClient.h).
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.AudioClientShareMode.Shared">
            <summary>
            AUDCLNT_SHAREMODE_SHARED
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.AudioClientShareMode.Exclusive">
            <summary>
            AUDCLNT_SHAREMODE_EXCLUSIVE
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Audio.ComInterop.AudioClientStreamFlags">
            <summary>
            AUDCLNT_STREAMFLAGS_XXX Constants (defined in Audiosessiontypes.h).
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.AudioClientStreamFlags.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.AudioClientStreamFlags.CrossProcess">
            <summary>
            AUDCLNT_STREAMFLAGS_CROSSPROCESS
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.AudioClientStreamFlags.Loopback">
            <summary>
            AUDCLNT_STREAMFLAGS_LOOPBACK
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.AudioClientStreamFlags.EventCallback">
            <summary>
            AUDCLNT_STREAMFLAGS_EVENTCALLBACK
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.AudioClientStreamFlags.NoPersist">
            <summary>
            AUDCLNT_STREAMFLAGS_NOPERSIST
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.AudioClientStreamFlags.RateAdjust">
            <summary>
            AUDCLNT_STREAMFLAGS_RATEADJUST
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.AudioClientStreamFlags.AutoConvertPcm">
            <summary>
            AUDCLNT_STREAMFLAGS_AUTOCONVERTPCM
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.AudioClientStreamFlags.SourceDefaultQuality">
            <summary>
            AUDCLNT_STREAMFLAGS_SRC_DEFAULT_QUALITY
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Audio.ComInterop.AudioClientStreamOptions">
            <summary>
            AudioClientStreamOptions enumeration (defined in AudioClient.h).
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.AudioClientStreamOptions.None">
            <summary>
            AUDCLNT_STREAMOPTIONS_NONE
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.AudioClientStreamOptions.Raw">
            <summary>
            AUDCLNT_STREAMOPTIONS_RAW
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.AudioClientStreamOptions.MatchFormat">
            <summary>
            AUDCLNT_STREAMOPTIONS_MATCH_FORMAT
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Audio.ComInterop.AudioVolumeNotificationDelegate">
            <summary>
            Defines the delegate for the callback that handles new audio volume notification data.
            </summary>
            <param name="data">An <see cref="T:Microsoft.Psi.Audio.ComInterop.AudioVolumeNotificationData"/> data object.</param>
        </member>
        <member name="T:Microsoft.Psi.Audio.ComInterop.AudioEndpointVolumeCallback">
            <summary>
            Client implementation of the IAudioEndpointVolumeCallback interface. When a method in the
            IAudioEndpointVolume interface changes the volume level or muting state of the endpoint device,
            the change initiates a call to the client's IAudioEndpointVolumeCallback::OnNotify method.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.AudioEndpointVolumeCallback.#ctor(Microsoft.Psi.Audio.ComInterop.AudioVolumeNotificationDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Audio.ComInterop.AudioEndpointVolumeCallback"/> class.
            </summary>
            <param name="callback">
            The delegate to call whenever a volume-change notification is received.
            </param>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.AudioEndpointVolumeCallback.OnNotify(System.IntPtr)">
            <summary>
            Callback method for endpoint-volume-change notifications.
            </summary>
            <param name="pNotify">Pointer to the notification data.</param>
        </member>
        <member name="T:Microsoft.Psi.Audio.ComInterop.AudioStreamCategory">
            <summary>
            Audio stream categories enumeration (defined in AudioSessionTypes.h).
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.AudioStreamCategory.Other">
            <summary>
            All other streams (default).
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.AudioStreamCategory.ForegroundOnlyMedia">
            <summary>
            (deprecated for Win10) Music, Streaming audio
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.AudioStreamCategory.BackgroundCapableMedia">
            <summary>
            (deprecated for Win10) Video with audio
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.AudioStreamCategory.Communications">
            <summary>
            VOIP, chat, phone call
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.AudioStreamCategory.Alerts">
            <summary>
            Alarm, Ring tones
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.AudioStreamCategory.SoundEffects">
            <summary>
            Sound effects, clicks, dings
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.AudioStreamCategory.GameEffects">
            <summary>
            Game sound effects
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.AudioStreamCategory.GameMedia">
            <summary>
            Background audio for games
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.AudioStreamCategory.GameChat">
            <summary>
            In game player chat
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.AudioStreamCategory.Speech">
            <summary>
            Speech recognition
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.AudioStreamCategory.Movie">
            <summary>
            Video with audio
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.AudioStreamCategory.Media">
            <summary>
            Music, Streaming audio
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Audio.ComInterop.AudioVolumeNotificationData">
            <summary>
            AUDIO_VOLUME_NOTIFICATION_DATA structure (defined in Endpointvolume.h).
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Audio.ComInterop.AudioVolumeNotificationData.EventContext">
            <summary>
            Gets or sets the context value for the IAudioEndpointVolumeCallback::OnNotify method. This
            member is the value of the event-context GUID that was provided as an input parameter to the
            IAudioEndpointVolume method call that changed the endpoint volume level or muting state.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Audio.ComInterop.AudioVolumeNotificationData.Muted">
            <summary>
            Gets or sets a value indicating whether the audio stream is currently muted.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Audio.ComInterop.AudioVolumeNotificationData.MasterVolume">
            <summary>
            Gets or sets the current master volume level of the audio stream. The volume level is normalized
            to the range from 0.0 to 1.0, where 0.0 is the minimum volume level and 1.0 is the maximum level.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Audio.ComInterop.AudioVolumeNotificationData.Channels">
            <summary>
            Gets or sets the number of channels in the audio stream.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Audio.ComInterop.AudioVolumeNotificationData.ChannelVolume">
            <summary>
            Gets or sets an array of channel volumes.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.AudioVolumeNotificationData.MarshalFromPtr(System.IntPtr)">
            <summary>
            Marshals a native AUDIO_VOLUME_NOTIFICATION_DATA structure to a <see cref="T:Microsoft.Psi.Audio.ComInterop.AudioVolumeNotificationData"/> object.
            </summary>
            <param name="ptr">A pointer to an AUDIO_VOLUME_NOTIFICATION_DATA structure.</param>
            <returns>The marshaled <see cref="T:Microsoft.Psi.Audio.ComInterop.AudioVolumeNotificationData"/> object.</returns>
        </member>
        <member name="T:Microsoft.Psi.Audio.ComInterop.AudioVolumeNotificationData.AudioVolumeNotificationDataStruct">
            <summary>
            Internal structure defining the layout of the AUDIO_VOLUME_NOTIFICATION_DATA structure.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.AudioVolumeNotificationData.AudioVolumeNotificationDataStruct.EventContext">
            <summary>
            guidEventContext.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.AudioVolumeNotificationData.AudioVolumeNotificationDataStruct.Muted">
            <summary>
            bMuted.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.AudioVolumeNotificationData.AudioVolumeNotificationDataStruct.MasterVolume">
            <summary>
            fMasterVolume.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.AudioVolumeNotificationData.AudioVolumeNotificationDataStruct.Channels">
            <summary>
            nChannels.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.AudioVolumeNotificationData.AudioVolumeNotificationDataStruct.ChannelVolume0">
            <summary>
            afChannelVolumes[1].
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.AudioVolumeNotificationData.AudioVolumeNotificationDataStruct.#ctor(System.Guid,System.Boolean,System.Single,System.Int32,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Audio.ComInterop.AudioVolumeNotificationData.AudioVolumeNotificationDataStruct"/> struct.
            </summary>
            <param name="eventContext">The event context.</param>
            <param name="muted">Muted state.</param>
            <param name="masterVolume">Master volume level.</param>
            <param name="channels">Number of channels.</param>
            <param name="channelVolume0">The first channel volume.</param>
        </member>
        <member name="T:Microsoft.Psi.Audio.ComInterop.ClsCtx">
            <summary>
            CLSCTX enumeration (defined in WTypes.h).
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.ClsCtx.INPROC_SERVER">
            <summary>
            CLSCTX_INPROC_SERVER
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.ClsCtx.INPROC_HANDLER">
            <summary>
            CLSCTX_INPROC_HANDLER
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.ClsCtx.LOCAL_SERVER">
            <summary>
            CLSCTX_LOCAL_SERVER
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.ClsCtx.INPROC_SERVER16">
            <summary>
            CLSCTX_INPROC_SERVER16
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.ClsCtx.REMOTE_SERVER">
            <summary>
            CLSCTX_REMOTE_SERVER
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.ClsCtx.INPROC_HANDLER16">
            <summary>
            CLSCTX_INPROC_HANDLER16
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.ClsCtx.RESERVED1">
            <summary>
            CLSCTX_RESERVED1
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.ClsCtx.RESERVED2">
            <summary>
            CLSCTX_RESERVED2
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.ClsCtx.RESERVED3">
            <summary>
            CLSCTX_RESERVED3
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.ClsCtx.RESERVED4">
            <summary>
            CLSCTX_RESERVED4
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.ClsCtx.NO_CODE_DOWNLOAD">
            <summary>
            CLSCTX_NO_CODE_DOWNLOAD
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.ClsCtx.RESERVED5">
            <summary>
            CLSCTX_RESERVED5
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.ClsCtx.NO_CUSTOM_MARSHAL">
            <summary>
            CLSCTX_NO_CUSTOM_MARSHAL
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.ClsCtx.ENABLE_CODE_DOWNLOAD">
            <summary>
            CLSCTX_ENABLE_CODE_DOWNLOAD
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.ClsCtx.NO_FAILURE_LOG">
            <summary>
            CLSCTX_NO_FAILURE_LOG
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.ClsCtx.DISABLE_AAA">
            <summary>
            CLSCTX_DISABLE_AAA
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.ClsCtx.ENABLE_AAA">
            <summary>
            CLSCTX_ENABLE_AAA
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.ClsCtx.FROM_DEFAULT_CONTEXT">
            <summary>
            CLSCTX_FROM_DEFAULT_CONTEXT
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.ClsCtx.ACTIVATE_32_BIT_SERVER">
            <summary>
            CLSCTX_ACTIVATE_32_BIT_SERVER
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.ClsCtx.ACTIVATE_64_BIT_SERVER">
            <summary>
            CLSCTX_ACTIVATE_64_BIT_SERVER
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.ClsCtx.ENABLE_CLOAKING">
            <summary>
            CLSCTX_ENABLE_CLOAKING
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.ClsCtx.APPCONTAINER">
            <summary>
            CLSCTX_APPCONTAINER
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.ClsCtx.ACTIVATE_AAA_AS_IU">
            <summary>
            CLSCTX_ACTIVATE_AAA_AS_IU
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.ClsCtx.PS_DLL">
            <summary>
            CLSCTX_PS_DLL
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.ClsCtx.SERVER">
            <summary>
            CLSCTX_SERVER
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.ClsCtx.ALL">
            <summary>
            CLSCTX_ALL
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Audio.ComInterop.CResamplerMediaObject">
            <summary>
            CResamplerMediaObject COM class declaration.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Audio.ComInterop.EDataFlow">
            <summary>
            EDataFlow enumeration.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.EDataFlow.Render">
            <summary>
            Render
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.EDataFlow.Capture">
            <summary>
            Capture
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.EDataFlow.All">
            <summary>
            All
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Audio.ComInterop.ERole">
            <summary>
            ERole enumeration.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.ERole.Console">
            <summary>
            Console
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.ERole.Multimedia">
            <summary>
            Multimedia
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.ERole.Communications">
            <summary>
            Communications
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Audio.ComInterop.Guids">
            <summary>
            Class that contains IID and CLSID strings and GUIDs.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.Guids.IMMDeviceIIDString">
            <summary>
            IMMDevice IID string.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.Guids.IMMDeviceEnumeratorIIDString">
            <summary>
            IMMDeviceEnumerator IID string.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.Guids.IMMDeviceCollectionIIDString">
            <summary>
            IMMDeviceCollection IID string.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.Guids.IMMNotificationClientIIDString">
            <summary>
            IMMNotificationClient IID string.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.Guids.IAudioClientIIDString">
            <summary>
            IAudioClient IID string.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.Guids.IAudioClient2IIDString">
            <summary>
            IAudioClient2 IID string.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.Guids.IAudioCaptureClientIIDString">
            <summary>
            IAudioCaptureClient IID string.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.Guids.IAudioRenderClientIIDString">
            <summary>
            IAudioRenderClient IID string.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.Guids.IAudioEndpointVolumeIIDString">
            <summary>
            IAudioEndpointVolume IID string.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.Guids.IAudioEndpointVolumeCallbackIIDString">
            <summary>
            IAudioEndpointVolumeCallback IID string.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.Guids.IPropertyStoreIIDString">
            <summary>
            IPropertyStore IID string.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.Guids.IMFTransformIIDString">
            <summary>
            IMFTransform IID string.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.Guids.IMFAttributesIIDString">
            <summary>
            IMFAttributes IID string.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.Guids.IMFMediaTypeIIDString">
            <summary>
            IMFMediaType IID string.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.Guids.IMFMediaEventIIDString">
            <summary>
            IMFMediaEvent IID string.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.Guids.IMFSampleIIDString">
            <summary>
            IMFSample IID string.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.Guids.IMFMediaBufferIIDString">
            <summary>
            IMFMediaBuffer IID string.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.Guids.IMFCollectionIIDString">
            <summary>
            IMFCollection IID string.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.Guids.MMDeviceEnumeratorCLSIDString">
            <summary>
            MMDeviceEnumerator CLSID string.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.Guids.CResamplerMediaObjectCLSIDString">
            <summary>
            CResamplerMediaObject CLSID string.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.Guids.MFMediaTypeAudio">
            <summary>
            MFMediaType_Audio (defined in mfapi.h).
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.Guids.MFMTMajorType">
            <summary>
            MF_MT_MAJOR_TYPE {48eba18e-f8c9-4687-bf11-0a74c9f96a8f} (defined in mfapi.h).
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.Guids.MFMTSubType">
            <summary>
            MF_MT_SUBTYPE {f7e34c9a-42e8-4714-b74b-cb29d72c35e5} (defined in mfapi.h).
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.Guids.MFMTAudioNumChannels">
            <summary>
            MF_MT_AUDIO_NUM_CHANNELS {37e48bf5-645e-4c5b-89de-ada9e29b696a} (defined in mfapi.h).
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.Guids.MFMTAudioSamplesPerSecond">
            <summary>
            MF_MT_AUDIO_SAMPLES_PER_SECOND {5faeeae7-0290-4c31-9e8a-c534f68d9dba} (defined in mfapi.h).
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.Guids.MFMTAudioBlockAlignment">
            <summary>
            MF_MT_AUDIO_BLOCK_ALIGNMENT {322de230-9eeb-43bd-ab7a-ff412251541d} (defined in mfapi.h).
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.Guids.MFMTAudioAvgBytesPerSecond">
            <summary>
            MF_MT_AUDIO_AVG_BYTES_PER_SECOND {1aab75c8-cfef-451c-ab95-ac034b8e1731} (defined in mfapi.h).
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.Guids.MFMTAudioBitsPerSample">
            <summary>
            MF_MT_AUDIO_BITS_PER_SAMPLE {f2deb57f-40fa-4764-aa33-ed4f2d1ff669} (defined in mfapi.h).
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.Guids.MFMTAllSamplesIndependent">
            <summary>
            MF_MT_ALL_SAMPLES_INDEPENDENT {c9173739-5e56-461c-b713-46fb995cb95f} (defined in mfapi.h).
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.Guids.KSDataFormatSubTypePCM">
            <summary>
            KSDATAFORMAT_SUBTYPE_PCM {"00000001-0000-0010-8000-00aa00389b71"} (defined in mmreg.h).
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.Guids.KSDataFormatSubTypeIeeeFloat">
            <summary>
            KSDATAFORMAT_SUBTYPE_IEEE_FLOAT {"00000003-0000-0010-8000-00aa00389b71"} (defined in mmreg.h).
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Audio.ComInterop.IAudioCaptureClient">
            <summary>
            IAudioCaptureClient COM interface (defined in Audioclient.h).
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioCaptureClient.GetBuffer(System.IntPtr@,System.Int32@,System.Int32@,System.Int64@,System.Int64@)">
            <summary>
            Retrieves a pointer to the next available packet of data in the capture endpoint buffer.
            </summary>
            <param name="dataBuffer">
            Pointer variable into which the method writes the starting address of the next data packet that is available for the client to read.
            </param>
            <param name="numFramesToRead">
            A variable into which the method writes the frame count (the number of audio frames available in the data packet). The client should either read the entire data packet or none of it.
            </param>
            <param name="bufferFlags">
            A variable into which the method writes the buffer-status flags.
            </param>
            <param name="devicePosition">
            A variable into which the method writes the device position of the first audio frame in the data packet.
            </param>
            <param name="qpcPosition">
            A variable into which the method writes the value of the performance counter at the time that the audio endpoint device recorded the device position of the first audio frame in the data packet.
            </param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioCaptureClient.ReleaseBuffer(System.Int32)">
            <summary>
            Releases the buffer.
            </summary>
            <param name="numFramesRead">The number of audio frames that the client read from the capture buffer.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioCaptureClient.GetNextPacketSize(System.Int32@)">
            <summary>
            Retrieves the number of frames in the next data packet in the capture endpoint buffer.
            </summary>
            <param name="numFramesInNextPacket">
            A variable into which the method writes the frame count (the number of audio frames in the next capture packet).
            </param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="T:Microsoft.Psi.Audio.ComInterop.IAudioClient">
            <summary>
            IAudioClient COM interface (defined in Audioclient.h).
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioClient.Initialize(Microsoft.Psi.Audio.ComInterop.AudioClientShareMode,Microsoft.Psi.Audio.ComInterop.AudioClientStreamFlags,System.Int64,System.Int64,System.IntPtr,System.Guid@)">
            <summary>
            Initializes the audio stream.
            </summary>
            <param name="shareMode">The sharing mode for the connection.</param>
            <param name="streamFlags">Flags to control creation of the stream.</param>
            <param name="hnsBufferDuration">The buffer capacity as a time value.</param>
            <param name="hnsPeriodicity">The device period.</param>
            <param name="format">Pointer to a format descriptor.</param>
            <param name="audioSessionGuid">A session GUID.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioClient.GetBufferSize">
            <summary>
            Retrieves the size (maximum capacity) of the audio buffer associated with the endpoint.
            </summary>
            <returns>The buffer size.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioClient.GetStreamLatency">
            <summary>
            Retrieves the maximum latency for the current stream and can be called any time after the stream has been initialized.
            </summary>
            <returns>A time value representing the latency.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioClient.GetCurrentPadding">
            <summary>
            Retrieves the number of frames of padding in the endpoint buffer.
            </summary>
            <returns>The current padding.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioClient.IsFormatSupported(Microsoft.Psi.Audio.ComInterop.AudioClientShareMode,System.IntPtr,System.IntPtr@)">
            <summary>
            Indicates whether the audio endpoint device supports a particular stream format.
            </summary>
            <param name="shareMode">The sharing mode for the stream format.</param>
            <param name="format">Pointer to the specified stream format.</param>
            <param name="closestMatchFormat">
            A pointer variable into which the method writes the address of a WAVEFORMATEX or WAVEFORMATEXTENSIBLE
            structure. This structure specifies the supported format that is closest to the format that the client
            specified through the pFormat parameter.
            </param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioClient.GetMixFormat">
            <summary>
            Retrieves the stream format that the audio engine uses for its internal processing of shared-mode streams.
            </summary>
            <returns>The address of the mix format structure.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioClient.GetDevicePeriod(System.Int64@,System.Int64@)">
            <summary>
            Retrieves the length of the periodic interval separating successive processing passes by the audio engine on the data in the endpoint buffer.
            </summary>
            <param name="defaultDevicePeriod">
            A variable into which the method writes a time value specifying the default interval between periodic
            processing passes by the audio engine.
            </param>
            <param name="minimumDevicePeriod">
            A variable into which the method writes a time value specifying the minimum interval between periodic
            processing passes by the audio endpoint device.
            </param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioClient.Start">
            <summary>
            Starts the audio stream.
            </summary>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioClient.Stop">
            <summary>
            Stops the audio stream.
            </summary>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioClient.Reset">
            <summary>
            Resets the audio stream.
            </summary>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioClient.SetEventHandle(System.IntPtr)">
            <summary>
            Sets the event handle that the audio engine will signal each time a buffer becomes ready to be processed by the client.
            </summary>
            <param name="eventHandle">The event handle.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioClient.GetService(System.Guid@)">
            <summary>
            Accesses additional services from the audio client object.
            </summary>
            <param name="interfaceId">The interface ID for the requested service.</param>
            <returns>An instance of the requested interface.</returns>
        </member>
        <member name="T:Microsoft.Psi.Audio.ComInterop.IAudioClient2">
            <summary>
            IAudioClient2 COM interface (defined in Audioclient.h).
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioClient2.Initialize(Microsoft.Psi.Audio.ComInterop.AudioClientShareMode,Microsoft.Psi.Audio.ComInterop.AudioClientStreamFlags,System.Int64,System.Int64,System.IntPtr,System.Guid@)">
            <summary>
            Initializes the audio stream.
            </summary>
            <param name="shareMode">The sharing mode for the connection.</param>
            <param name="streamFlags">Flags to control creation of the stream.</param>
            <param name="hnsBufferDuration">The buffer capacity as a time value.</param>
            <param name="hnsPeriodicity">The device period.</param>
            <param name="format">Pointer to a format descriptor.</param>
            <param name="audioSessionGuid">A session GUID.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioClient2.GetBufferSize">
            <summary>
            Retrieves the size (maximum capacity) of the audio buffer associated with the endpoint.
            </summary>
            <returns>The buffer size.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioClient2.GetStreamLatency">
            <summary>
            Retrieves the maximum latency for the current stream and can be called any time after the stream has
            been initialized.
            </summary>
            <returns>A time value representing the latency.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioClient2.GetCurrentPadding">
            <summary>
            Retrieves the number of frames of padding in the endpoint buffer.
            </summary>
            <returns>The current padding.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioClient2.IsFormatSupported(Microsoft.Psi.Audio.ComInterop.AudioClientShareMode,System.IntPtr,System.IntPtr@)">
            <summary>
            Indicates whether the audio endpoint device supports a particular stream format.
            </summary>
            <param name="shareMode">The sharing mode for the stream format.</param>
            <param name="format">Pointer to the specified stream format.</param>
            <param name="closestMatchFormat">
            A pointer variable into which the method writes the address of a WAVEFORMATEX or WAVEFORMATEXTENSIBLE
            structure. This structure specifies the supported format that is closest to the format that the client
            specified through the pFormat parameter.
            </param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioClient2.GetMixFormat">
            <summary>
            Retrieves the stream format that the audio engine uses for its internal processing of shared-mode streams.
            </summary>
            <returns>The address of the mix format structure.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioClient2.GetDevicePeriod(System.Int64@,System.Int64@)">
            <summary>
            Retrieves the length of the periodic interval separating successive processing passes by the audio engine
            on the data in the endpoint buffer.
            </summary>
            <param name="defaultDevicePeriod">
            A variable into which the method writes a time value specifying the default interval between periodic
            processing passes by the audio engine.
            </param>
            <param name="minimumDevicePeriod">
            A variable into which the method writes a time value specifying the minimum interval between periodic
            processing passes by the audio endpoint device.
            </param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioClient2.Start">
            <summary>
            Starts the audio stream.
            </summary>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioClient2.Stop">
            <summary>
            Stops the audio stream.
            </summary>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioClient2.Reset">
            <summary>
            Resets the audio stream.
            </summary>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioClient2.SetEventHandle(System.IntPtr)">
            <summary>
            Sets the event handle that the audio engine will signal each time a buffer becomes ready to be processed
            by the client.
            </summary>
            <param name="eventHandle">The event handle.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioClient2.GetService(System.Guid@)">
            <summary>
            Accesses additional services from the audio client object.
            </summary>
            <param name="interfaceId">The interface ID for the requested service.</param>
            <returns>An instance of the requested interface.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioClient2.IsOffloadCapable(Microsoft.Psi.Audio.ComInterop.AudioStreamCategory)">
            <summary>
            Retrieves information about whether or not the endpoint on which a stream is created is capable of
            supporting an offloaded stream.
            </summary>
            <param name="category">An enumeration that specifies the category of an audio stream.</param>
            <returns>A boolean value indicating whether the endpoint is offload-capable.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioClient2.SetClientProperties(Microsoft.Psi.Audio.ComInterop.AudioClientProperties@)">
            <summary>
            Sets the properties of the audio stream by populating an AudioClientProperties structure.
            </summary>
            <param name="properties">An AudioClientProperties structure.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioClient2.GetBufferSizeLimits(System.IntPtr,System.Boolean,System.Int64@,System.Int64@)">
            <summary>
            Retrieves the buffer size limits of the hardware audio engine in 100-nanosecond units.
            </summary>
            <param name="format">
            A pointer to the target format that is being queried for the buffer size limit.
            </param>
            <param name="eventDriven">
            Boolean value to indicate whether or not the stream can be event-driven.
            </param>
            <param name="minBufferDuration">
            The minimum buffer size (in 100-nanosecond units) that is required for the underlying hardware audio
            engine to operate at the format specified in the format parameter, without frequent audio glitching.
            </param>
            <param name="maxBufferDuration">
            the maximum buffer size (in 100-nanosecond units) that the underlying hardware audio engine can support
            for the format specified in the format parameter.
            </param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="T:Microsoft.Psi.Audio.ComInterop.IAudioEndpointVolume">
            <summary>
            IAudioEndpointVolume COM interface (defined in Endpointvolume.h).
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioEndpointVolume.RegisterControlChangeNotify(Microsoft.Psi.Audio.ComInterop.IAudioEndpointVolumeCallback)">
            <summary>
            Registers a client's notification callback interface.
            </summary>
            <param name="notify">The client's IAudioEndpointVolumeCallback interface.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioEndpointVolume.UnregisterControlChangeNotify(Microsoft.Psi.Audio.ComInterop.IAudioEndpointVolumeCallback)">
            <summary>
            Deletes the registration of a client's notification callback interface.
            </summary>
            <param name="notify">The client's IAudioEndpointVolumeCallback interface.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioEndpointVolume.GetChannelCount(System.Int32@)">
            <summary>
            Gets a count of the channels in the audio stream.
            </summary>
            <param name="channelCount">The channel count.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioEndpointVolume.SetMasterVolumeLevel(System.Single,System.Guid@)">
            <summary>
            Sets the master volume level of the audio stream, in decibels.
            </summary>
            <param name="levelDB">The new master volume level in decibels.</param>
            <param name="pguidEventContext">
            Context value for the IAudioEndpointVolumeCallback.OnNotify method.
            </param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioEndpointVolume.SetMasterVolumeLevelScalar(System.Single,System.Guid@)">
            <summary>
            Sets the master volume level, expressed as a normalized, audio-tapered value.
            </summary>
            <param name="level">The new master volume level.</param>
            <param name="pguidEventContext">
            Context value for the IAudioEndpointVolumeCallback.OnNotify method.
            </param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioEndpointVolume.GetMasterVolumeLevel">
            <summary>
            Gets the master volume level of the audio stream, in decibels.
            </summary>
            <returns>The master volume level in decibels.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioEndpointVolume.GetMasterVolumeLevelScalar">
            <summary>
            Gets the master volume level, expressed as a normalized, audio-tapered value.
            </summary>
            <returns>The master volume level.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioEndpointVolume.SetChannelVolumeLevel(System.UInt32,System.Single,System.Guid@)">
            <summary>
            Sets the volume level, in decibels, of the specified channel of the audio stream.
            </summary>
            <param name="channel">The channel number.</param>
            <param name="levelDB">The new volume level in decibels.</param>
            <param name="pguidEventContext">
            Context value for the IAudioEndpointVolumeCallback.OnNotify method.
            </param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioEndpointVolume.SetChannelVolumeLevelScalar(System.UInt32,System.Single,System.Guid@)">
            <summary>
            Sets the normalized, audio-tapered volume level of the specified channel in the audio stream.
            </summary>
            <param name="channel">The channel number.</param>
            <param name="level">The new volume level.</param>
            <param name="pguidEventContext">
            Context value for the IAudioEndpointVolumeCallback.OnNotify method.
            </param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioEndpointVolume.GetChannelVolumeLevel(System.UInt32)">
            <summary>
            Gets the volume level, in decibels, of the specified channel in the audio stream.
            </summary>
            <param name="channel">The channel number.</param>
            <returns>The channel volume level in decibels.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioEndpointVolume.GetChannelVolumeLevelScalar(System.UInt32)">
            <summary>
            Gets the normalized, audio-tapered volume level of the specified channel of the audio stream.
            </summary>
            <param name="channel">The channel number.</param>
            <returns>The channel volume level.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioEndpointVolume.SetMute(System.Boolean,System.Guid@)">
            <summary>
            Sets the muting state of the audio stream.
            </summary>
            <param name="mute">The new muting state.</param>
            <param name="pguidEventContext">
            Context value for the IAudioEndpointVolumeCallback.OnNotify method.
            </param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioEndpointVolume.GetMute">
            <summary>
            Gets the muting state of the audio stream.
            </summary>
            <returns>The muting state.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioEndpointVolume.GetVolumeStepInfo(System.UInt32@,System.UInt32@)">
            <summary>
            Gets information about the current step in the volume range.
            </summary>
            <param name="stepIndex">The current step index.</param>
            <param name="stepCount">The number of steps in the volume range.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioEndpointVolume.VolumeStepUp(System.Guid@)">
            <summary>
            Increases the volume level by one step.
            </summary>
            <param name="pguidEventContext">
            Context value for the IAudioEndpointVolumeCallback.OnNotify method.
            </param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioEndpointVolume.VolumeStepDown(System.Guid@)">
            <summary>
            Decreases the volume level by one step.
            </summary>
            <param name="pguidEventContext">
            Context value for the IAudioEndpointVolumeCallback.OnNotify method.
            </param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioEndpointVolume.QueryHardwareSupport">
            <summary>
            Queries the audio endpoint device for its hardware-supported functions.
            </summary>
            <returns>
            A hardware support mask that indicates the hardware capabilities of the audio endpoint device.
            </returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioEndpointVolume.GetVolumeRange(System.Single@,System.Single@,System.Single@)">
            <summary>
            Gets the volume range of the audio stream, in decibels.
            </summary>
            <param name="pflVolumeMindB">The minimum volume level.</param>
            <param name="pflVolumeMaxdB">The maximum volume level.</param>
            <param name="pflVolumeIncrementdB">The volume increment.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="T:Microsoft.Psi.Audio.ComInterop.IAudioEndpointVolumeCallback">
            <summary>
            IAudioEndpointVolumeCallback COM interface (defined in Endpointvolume.h).
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioEndpointVolumeCallback.OnNotify(System.IntPtr)">
            <summary>
            Notifies the client that the volume level or muting state of the audio endpoint device has changed.
            </summary>
            <param name="notify">Pointer to the volume-notification data.</param>
        </member>
        <member name="T:Microsoft.Psi.Audio.ComInterop.IAudioRenderClient">
            <summary>
            IAudioRenderClient COM interface (defined in Audioclient.h).
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioRenderClient.GetBuffer(System.Int32)">
            <summary>
            Retrieves a pointer to the next available space in the rendering endpoint buffer.
            </summary>
            <param name="numFramesRequested">
            The number of audio frames in the data packet that the caller plans to write to the requested space in the buffer.
            </param>
            <returns>
            The starting address of the buffer area into which the caller will write the data packet.
            </returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IAudioRenderClient.ReleaseBuffer(System.Int32,System.Int32)">
            <summary>
            Releases the buffer space acquired in the previous call to the IAudioRenderClient.GetBuffer method.
            </summary>
            <param name="numFramesWritten">
            The number of audio frames written by the client to the data packet.
            </param>
            <param name="flags">The buffer-configuration flags.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="T:Microsoft.Psi.Audio.ComInterop.IMFAttributes">
            <summary>
            IMFAttributes COM interface (defined in Mfobjects.h).
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFAttributes.GetItem(System.Guid@,Microsoft.Psi.Audio.ComInterop.PropVariant@)">
            <summary>
            Retrieves the value associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="value">A PROPVARIANT that receives the value.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFAttributes.GetItemType(System.Guid@,System.Int16@)">
            <summary>
            Retrieves the data type of the value associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="type">The attribute type, as an MF_ATTRIBUTE_TYPE enumeration value.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFAttributes.CompareItem(System.Guid@,Microsoft.Psi.Audio.ComInterop.PropVariant@,System.Boolean@)">
            <summary>
            Queries whether a stored attribute value equals a specified PROPVARIANT.
            </summary>
            <param name="guidKey">A GUID that identifies which value to query.</param>
            <param name="value">PROPVARIANT that contains the value to compare.</param>
            <param name="result">A boolean value indicating whether the attribute matches the value.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFAttributes.Compare(Microsoft.Psi.Audio.ComInterop.IMFAttributes,Microsoft.Psi.Audio.ComInterop.MFAttributesMatchType,System.Boolean@)">
            <summary>
            Compares the attributes on this object with the attributes on another object.
            </summary>
            <param name="theirs">An IMFAttributes interface to compare with this object.</param>
            <param name="matchType">
            Member of the MFAttributesMatchType enumeration, specifying the type of comparison to make.
            </param>
            <param name="result">A boolean value representing the match result.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFAttributes.GetUINT32(System.Guid@,System.UInt32@)">
            <summary>
            Retrieves a UINT32 value associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="value">The UINT32 value.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFAttributes.GetUINT64(System.Guid@,System.UInt64@)">
            <summary>
            Retrieves a UINT64 value associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="value">The UINT64 value.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFAttributes.GetDouble(System.Guid@,System.Double@)">
            <summary>
            Retrieves a double value associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="value">The double value.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFAttributes.GetGUID(System.Guid@,System.Guid@)">
            <summary>
            Retrieves a GUID value associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="guidValue">The GUID value.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFAttributes.GetStringLength(System.Guid@,System.Int32@)">
            <summary>
            Retrieves the length of a string value associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="length">The length of the string value.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFAttributes.GetString(System.Guid@,System.Text.StringBuilder,System.Int32,System.Int32@)">
            <summary>
            Retrieves a wide-character string associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="value">A StringBuilder to which the string value will be written.</param>
            <param name="size">The maximum length of the string value to return.</param>
            <param name="length">The length of the string.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFAttributes.GetAllocatedString(System.Guid@,System.String,System.Int32@)">
            <summary>
            Retrieves a wide-character string associated with a key. This method allocates the memory for the string.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="value">The string value.</param>
            <param name="length">The length of the string.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFAttributes.GetBlobSize(System.Guid@,System.Int32@)">
            <summary>
            Retrieves the length of a byte array associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="blobSize">The size of the array, in bytes.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFAttributes.GetBlob(System.Guid@,System.Byte[],System.Int32,System.Int32@)">
            <summary>
            Retrieves a byte array associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="buf">A buffer allocated by the caller.</param>
            <param name="bufSize">The size of the buffer, in bytes.</param>
            <param name="blobSize">Receives the size of the byte array.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFAttributes.GetAllocatedBlob(System.Guid@,System.Byte[]@,System.Int32@)">
            <summary>
            Retrieves a byte array associated with a key. This method allocates the memory for the array.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="buf">A copy of the array.</param>
            <param name="size">The size of the array, in bytes.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFAttributes.GetUnknown(System.Guid@,System.Guid@,System.Object@)">
            <summary>
            Retrieves an interface pointer associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="iid">Interface identifier (IID) of the interface to retrieve.</param>
            <param name="interfacePtr">The requested interface.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFAttributes.SetItem(System.Guid@,Microsoft.Psi.Audio.ComInterop.PropVariant@)">
            <summary>
            Associates an attribute value with a key.
            </summary>
            <param name="guidKey">A GUID that identifies the value to set.</param>
            <param name="value">The value to associate with this key.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFAttributes.DeleteItem(System.Guid@)">
            <summary>
            Removes a key/value pair from the object's attribute list.
            </summary>
            <param name="guidKey">A GUID that identifies the value to delete.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFAttributes.DeleteAllItems">
            <summary>
            Removes all key/value pairs from the object's attribute list.
            </summary>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFAttributes.SetUINT32(System.Guid@,System.UInt32)">
            <summary>
            Associates a UINT32 value with a key.
            </summary>
            <param name="guidKey">A GUID that identifies the value to set.</param>
            <param name="value">The value to associate with this key.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFAttributes.SetUINT64(System.Guid@,System.UInt64)">
            <summary>
            Associates a UINT64 value with a key.
            </summary>
            <param name="guidKey">A GUID that identifies the value to set.</param>
            <param name="value">The value to associate with this key.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFAttributes.SetDouble(System.Guid@,System.Double)">
            <summary>
            Associates a double value with a key.
            </summary>
            <param name="guidKey">A GUID that identifies the value to set.</param>
            <param name="value">The value to associate with this key.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFAttributes.SetGUID(System.Guid@,System.Guid@)">
            <summary>
            Associates a GUID value with a key.
            </summary>
            <param name="guidKey">A GUID that identifies the value to set.</param>
            <param name="guidValue">The value to associate with this key.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFAttributes.SetString(System.Guid@,System.String)">
            <summary>
            Associates a wide-character string with a key.
            </summary>
            <param name="guidKey">A GUID that identifies the value to set.</param>
            <param name="value">The string to associate with this key.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFAttributes.SetBlob(System.Guid@,System.Byte[],System.Int32)">
            <summary>
            Associates a byte array with a key.
            </summary>
            <param name="guidKey">A GUID that identifies the value to set.</param>
            <param name="buf">The byte array to associate with this key.</param>
            <param name="size">Size of the array, in bytes.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFAttributes.SetUnknown(System.Guid@,System.Object)">
            <summary>
            Associates an IUnknown pointer with a key.
            </summary>
            <param name="guidKey">A GUID that identifies the value to set.</param>
            <param name="interfacePtr">The value to associate with this key.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFAttributes.LockStore">
            <summary>
            Locks the attribute store so that no other thread can access it.
            </summary>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFAttributes.UnlockStore">
            <summary>
            Unlocks the attribute store.
            </summary>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFAttributes.GetCount(System.Int32@)">
            <summary>
            Retrieves the number of attributes that are set on this object.
            </summary>
            <param name="items">The number of attributes.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFAttributes.GetItemByIndex(System.Int32,System.Guid@,Microsoft.Psi.Audio.ComInterop.PropVariant@)">
            <summary>
            Retrieves an attribute at the specified index.
            </summary>
            <param name="index">Index of the attribute to retrieve.</param>
            <param name="guidKey">The GUID that identifies this attribute.</param>
            <param name="value">A PROPVARIANT that receives the value.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFAttributes.CopyAllItems(Microsoft.Psi.Audio.ComInterop.IMFAttributes)">
            <summary>
            Copies all of the attributes from this object into another attribute store.
            </summary>
            <param name="dest">The IMFAttributes interface of the attribute store that receives the copy.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="T:Microsoft.Psi.Audio.ComInterop.IMFCollection">
            <summary>
            IMFCollection COM interface definition (defined in mfobjects.h).
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFCollection.GetElementCount(System.Int32@)">
            <summary>
            Retrieves the number of objects in the collection.
            </summary>
            <param name="elementCount">The object count.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFCollection.GetElement(System.Int32,System.Object@)">
            <summary>
            Retrieves an object in the collection.
            </summary>
            <param name="elementIndex">The object index.</param>
            <param name="unknownElement">The IUnknown interface of the object.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFCollection.AddElement(System.Object)">
            <summary>
            Adds an object to the collection.
            </summary>
            <param name="unknownElement">The IUnknown interface of the object.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFCollection.RemoveElement(System.Int32,System.Object@)">
            <summary>
            Removes an object from the collection.
            </summary>
            <param name="elementIndex">The object index.</param>
            <param name="unknownElement">The IUnknown interface of the object.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFCollection.InsertElementAt(System.Int32,System.Object)">
            <summary>
            Adds an object at the specified index in the collection.
            </summary>
            <param name="index">The index where the object will be added to the collection.</param>
            <param name="unknownElement">The IUnknown interface of the object.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFCollection.RemoveAllElements">
            <summary>
            Removes all items from the collection.
            </summary>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="T:Microsoft.Psi.Audio.ComInterop.IMFMediaBuffer">
            <summary>
            IMFMediaBuffer COM interface (defined in Mfobjects.h).
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaBuffer.Lock(System.IntPtr@,System.Int32@,System.Int32@)">
            <summary>
            Gives the caller access to the memory in the buffer.
            </summary>
            <param name="bufferPtr">A pointer to the start of the buffer.</param>
            <param name="maxLength">The maximum amount of data that can be written to the buffer.</param>
            <param name="currentLength">The length of the valid data in the buffer, in bytes.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaBuffer.Unlock">
            <summary>
            Unlocks a buffer that was previously locked.
            </summary>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaBuffer.GetCurrentLength">
            <summary>
            Retrieves the length of the valid data in the buffer.
            </summary>
            <returns>The length of the valid data, in bytes.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaBuffer.SetCurrentLength(System.Int32)">
            <summary>
            Sets the length of the valid data in the buffer.
            </summary>
            <param name="currentLength">Length of the valid data, in bytes.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaBuffer.GetMaxLength">
            <summary>
            Retrieves the allocated size of the buffer.
            </summary>
            <returns>The allocated size of the buffer, in bytes.</returns>
        </member>
        <member name="T:Microsoft.Psi.Audio.ComInterop.IMFMediaEvent">
            <summary>
            IMFMediaEvent COM interface (defined in Mfobjects.h).
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaEvent.GetItem(System.Guid@,Microsoft.Psi.Audio.ComInterop.PropVariant@)">
            <summary>
            Retrieves the value associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="value">A PROPVARIANT that receives the value.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaEvent.GetItemType(System.Guid@,System.Int16@)">
            <summary>
            Retrieves the data type of the value associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="type">The attribute type, as an MF_ATTRIBUTE_TYPE enumeration value.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaEvent.CompareItem(System.Guid@,Microsoft.Psi.Audio.ComInterop.PropVariant@,System.Boolean@)">
            <summary>
            Queries whether a stored attribute value equals a specified PROPVARIANT.
            </summary>
            <param name="guidKey">A GUID that identifies which value to query.</param>
            <param name="value">PROPVARIANT that contains the value to compare.</param>
            <param name="result">A boolean value indicating whether the attribute matches the value.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaEvent.Compare(Microsoft.Psi.Audio.ComInterop.IMFAttributes,Microsoft.Psi.Audio.ComInterop.MFAttributesMatchType,System.Boolean@)">
            <summary>
            Compares the attributes on this object with the attributes on another object.
            </summary>
            <param name="theirs">An IMFAttributes interface to compare with this object.</param>
            <param name="matchType">
            Member of the MFAttributesMatchType enumeration, specifying the type of comparison to make.
            </param>
            <param name="result">A boolean value representing the match result.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaEvent.GetUINT32(System.Guid@,System.UInt32@)">
            <summary>
            Retrieves a UINT32 value associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="value">The UINT32 value.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaEvent.GetUINT64(System.Guid@,System.UInt64@)">
            <summary>
            Retrieves a UINT64 value associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="value">The UINT64 value.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaEvent.GetDouble(System.Guid@,System.Double@)">
            <summary>
            Retrieves a double value associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="value">The double value.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaEvent.GetGUID(System.Guid@,System.Guid@)">
            <summary>
            Retrieves a GUID value associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="guidValue">The GUID value.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaEvent.GetStringLength(System.Guid@,System.Int32@)">
            <summary>
            Retrieves the length of a string value associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="length">The length of the string value.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaEvent.GetString(System.Guid@,System.Text.StringBuilder,System.Int32,System.Int32@)">
            <summary>
            Retrieves a wide-character string associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="value">A StringBuilder to which the string value will be written.</param>
            <param name="size">The maximum length of the string value to return.</param>
            <param name="length">The length of the string.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaEvent.GetAllocatedString(System.Guid@,System.String,System.Int32@)">
            <summary>
            Retrieves a wide-character string associated with a key. This method allocates the memory for the string.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="value">The string value.</param>
            <param name="length">The length of the string.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaEvent.GetBlobSize(System.Guid@,System.Int32@)">
            <summary>
            Retrieves the length of a byte array associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="blobSize">The size of the array, in bytes.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaEvent.GetBlob(System.Guid@,System.Byte[],System.Int32,System.Int32@)">
            <summary>
            Retrieves a byte array associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="buf">A buffer allocated by the caller.</param>
            <param name="bufSize">The size of the buffer, in bytes.</param>
            <param name="blobSize">Receives the size of the byte array.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaEvent.GetAllocatedBlob(System.Guid@,System.Byte[]@,System.Int32@)">
            <summary>
            Retrieves a byte array associated with a key. This method allocates the memory for the array.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="buf">A copy of the array.</param>
            <param name="size">The size of the array, in bytes.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaEvent.GetUnknown(System.Guid@,System.Guid@,System.Object@)">
            <summary>
            Retrieves an interface pointer associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="iid">Interface identifier (IID) of the interface to retrieve.</param>
            <param name="interfacePtr">The requested interface.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaEvent.SetItem(System.Guid@,Microsoft.Psi.Audio.ComInterop.PropVariant@)">
            <summary>
            Associates an attribute value with a key.
            </summary>
            <param name="guidKey">A GUID that identifies the value to set.</param>
            <param name="value">The value to associate with this key.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaEvent.DeleteItem(System.Guid@)">
            <summary>
            Removes a key/value pair from the object's attribute list.
            </summary>
            <param name="guidKey">A GUID that identifies the value to delete.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaEvent.DeleteAllItems">
            <summary>
            Removes all key/value pairs from the object's attribute list.
            </summary>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaEvent.SetUINT32(System.Guid@,System.UInt32)">
            <summary>
            Associates a UINT32 value with a key.
            </summary>
            <param name="guidKey">A GUID that identifies the value to set.</param>
            <param name="value">The value to associate with this key.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaEvent.SetUINT64(System.Guid@,System.UInt64)">
            <summary>
            Associates a UINT64 value with a key.
            </summary>
            <param name="guidKey">A GUID that identifies the value to set.</param>
            <param name="value">The value to associate with this key.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaEvent.SetDouble(System.Guid@,System.Double)">
            <summary>
            Associates a double value with a key.
            </summary>
            <param name="guidKey">A GUID that identifies the value to set.</param>
            <param name="value">The value to associate with this key.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaEvent.SetGUID(System.Guid@,System.Guid@)">
            <summary>
            Associates a GUID value with a key.
            </summary>
            <param name="guidKey">A GUID that identifies the value to set.</param>
            <param name="guidValue">The value to associate with this key.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaEvent.SetString(System.Guid@,System.String)">
            <summary>
            Associates a wide-character string with a key.
            </summary>
            <param name="guidKey">A GUID that identifies the value to set.</param>
            <param name="value">The string to associate with this key.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaEvent.SetBlob(System.Guid@,System.Byte[],System.Int32)">
            <summary>
            Associates a byte array with a key.
            </summary>
            <param name="guidKey">A GUID that identifies the value to set.</param>
            <param name="buf">The byte array to associate with this key.</param>
            <param name="size">Size of the array, in bytes.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaEvent.SetUnknown(System.Guid@,System.Object)">
            <summary>
            Associates an IUnknown pointer with a key.
            </summary>
            <param name="guidKey">A GUID that identifies the value to set.</param>
            <param name="interfacePtr">The value to associate with this key.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaEvent.LockStore">
            <summary>
            Locks the attribute store so that no other thread can access it.
            </summary>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaEvent.UnlockStore">
            <summary>
            Unlocks the attribute store.
            </summary>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaEvent.GetCount(System.Int32@)">
            <summary>
            Retrieves the number of attributes that are set on this object.
            </summary>
            <param name="items">The number of attributes.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaEvent.GetItemByIndex(System.Int32,System.Guid@,Microsoft.Psi.Audio.ComInterop.PropVariant@)">
            <summary>
            Retrieves an attribute at the specified index.
            </summary>
            <param name="index">Index of the attribute to retrieve.</param>
            <param name="guidKey">The GUID that identifies this attribute.</param>
            <param name="value">A PROPVARIANT that receives the value.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaEvent.CopyAllItems(Microsoft.Psi.Audio.ComInterop.IMFAttributes)">
            <summary>
            Copies all of the attributes from this object into another attribute store.
            </summary>
            <param name="dest">The IMFAttributes interface of the attribute store that receives the copy.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaEvent.GetType(System.Int32@)">
            <summary>
            Retrieves the event type.
            </summary>
            <param name="mediaEventType">The event type.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaEvent.GetExtendedType(System.Guid@)">
            <summary>
            Retrieves the extended type of the event.
            </summary>
            <param name="guidExtendedType">A GUID that identifies the extended type.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaEvent.GetStatus(System.Int32@)">
            <summary>
            Retrieves an HRESULT that specifies the event status.
            </summary>
            <param name="status">The event status.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaEvent.GetValue(Microsoft.Psi.Audio.ComInterop.PropVariant@)">
            <summary>
            Retrieves the value associated with the event.
            </summary>
            <param name="value">The associated value.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="T:Microsoft.Psi.Audio.ComInterop.IMFMediaType">
            <summary>
            IMFMediaType COM interface (defined in Mfobjects.h).
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaType.GetItem(System.Guid@,Microsoft.Psi.Audio.ComInterop.PropVariant@)">
            <summary>
            Retrieves the value associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="value">A PROPVARIANT that receives the value.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaType.GetItemType(System.Guid@,System.Int16@)">
            <summary>
            Retrieves the data type of the value associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="type">The attribute type, as an MF_ATTRIBUTE_TYPE enumeration value.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaType.CompareItem(System.Guid@,Microsoft.Psi.Audio.ComInterop.PropVariant@,System.Boolean@)">
            <summary>
            Queries whether a stored attribute value equals a specified PROPVARIANT.
            </summary>
            <param name="guidKey">A GUID that identifies which value to query.</param>
            <param name="value">PROPVARIANT that contains the value to compare.</param>
            <param name="result">A boolean value indicating whether the attribute matches the value.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaType.Compare(Microsoft.Psi.Audio.ComInterop.IMFAttributes,Microsoft.Psi.Audio.ComInterop.MFAttributesMatchType,System.Boolean@)">
            <summary>
            Compares the attributes on this object with the attributes on another object.
            </summary>
            <param name="theirs">An IMFAttributes interface to compare with this object.</param>
            <param name="matchType">
            Member of the MFAttributesMatchType enumeration, specifying the type of comparison to make.
            </param>
            <param name="result">A boolean value representing the match result.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaType.GetUINT32(System.Guid@,System.UInt32@)">
            <summary>
            Retrieves a UINT32 value associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="value">The UINT32 value.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaType.GetUINT64(System.Guid@,System.UInt64@)">
            <summary>
            Retrieves a UINT64 value associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="value">The UINT64 value.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaType.GetDouble(System.Guid@,System.Double@)">
            <summary>
            Retrieves a double value associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="value">The double value.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaType.GetGUID(System.Guid@,System.Guid@)">
            <summary>
            Retrieves a GUID value associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="guidValue">The GUID value.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaType.GetStringLength(System.Guid@,System.Int32@)">
            <summary>
            Retrieves the length of a string value associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="length">The length of the string value.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaType.GetString(System.Guid@,System.Text.StringBuilder,System.Int32,System.Int32@)">
            <summary>
            Retrieves a wide-character string associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="value">A StringBuilder to which the string value will be written.</param>
            <param name="size">The maximum length of the string value to return.</param>
            <param name="length">The length of the string.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaType.GetAllocatedString(System.Guid@,System.String,System.Int32@)">
            <summary>
            Retrieves a wide-character string associated with a key. This method allocates the memory for the string.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="value">The string value.</param>
            <param name="length">The length of the string.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaType.GetBlobSize(System.Guid@,System.Int32@)">
            <summary>
            Retrieves the length of a byte array associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="blobSize">The size of the array, in bytes.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaType.GetBlob(System.Guid@,System.Byte[],System.Int32,System.Int32@)">
            <summary>
            Retrieves a byte array associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="buf">A buffer allocated by the caller.</param>
            <param name="bufSize">The size of the buffer, in bytes.</param>
            <param name="blobSize">Receives the size of the byte array.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaType.GetAllocatedBlob(System.Guid@,System.Byte[]@,System.Int32@)">
            <summary>
            Retrieves a byte array associated with a key. This method allocates the memory for the array.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="buf">A copy of the array.</param>
            <param name="size">The size of the array, in bytes.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaType.GetUnknown(System.Guid@,System.Guid@,System.Object@)">
            <summary>
            Retrieves an interface pointer associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="iid">Interface identifier (IID) of the interface to retrieve.</param>
            <param name="interfacePtr">The requested interface.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaType.SetItem(System.Guid@,Microsoft.Psi.Audio.ComInterop.PropVariant@)">
            <summary>
            Associates an attribute value with a key.
            </summary>
            <param name="guidKey">A GUID that identifies the value to set.</param>
            <param name="value">The value to associate with this key.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaType.DeleteItem(System.Guid@)">
            <summary>
            Removes a key/value pair from the object's attribute list.
            </summary>
            <param name="guidKey">A GUID that identifies the value to delete.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaType.DeleteAllItems">
            <summary>
            Removes all key/value pairs from the object's attribute list.
            </summary>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaType.SetUINT32(System.Guid@,System.UInt32)">
            <summary>
            Associates a UINT32 value with a key.
            </summary>
            <param name="guidKey">A GUID that identifies the value to set.</param>
            <param name="value">The value to associate with this key.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaType.SetUINT64(System.Guid@,System.UInt64)">
            <summary>
            Associates a UINT64 value with a key.
            </summary>
            <param name="guidKey">A GUID that identifies the value to set.</param>
            <param name="value">The value to associate with this key.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaType.SetDouble(System.Guid@,System.Double)">
            <summary>
            Associates a double value with a key.
            </summary>
            <param name="guidKey">A GUID that identifies the value to set.</param>
            <param name="value">The value to associate with this key.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaType.SetGUID(System.Guid@,System.Guid@)">
            <summary>
            Associates a GUID value with a key.
            </summary>
            <param name="guidKey">A GUID that identifies the value to set.</param>
            <param name="guidValue">The value to associate with this key.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaType.SetString(System.Guid@,System.String)">
            <summary>
            Associates a wide-character string with a key.
            </summary>
            <param name="guidKey">A GUID that identifies the value to set.</param>
            <param name="value">The string to associate with this key.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaType.SetBlob(System.Guid@,System.Byte[],System.Int32)">
            <summary>
            Associates a byte array with a key.
            </summary>
            <param name="guidKey">A GUID that identifies the value to set.</param>
            <param name="buf">The byte array to associate with this key.</param>
            <param name="size">Size of the array, in bytes.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaType.SetUnknown(System.Guid@,System.Object)">
            <summary>
            Associates an IUnknown pointer with a key.
            </summary>
            <param name="guidKey">A GUID that identifies the value to set.</param>
            <param name="interfacePtr">The value to associate with this key.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaType.LockStore">
            <summary>
            Locks the attribute store so that no other thread can access it.
            </summary>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaType.UnlockStore">
            <summary>
            Unlocks the attribute store.
            </summary>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaType.GetCount(System.Int32@)">
            <summary>
            Retrieves the number of attributes that are set on this object.
            </summary>
            <param name="items">The number of attributes.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaType.GetItemByIndex(System.Int32,System.Guid@,Microsoft.Psi.Audio.ComInterop.PropVariant@)">
            <summary>
            Retrieves an attribute at the specified index.
            </summary>
            <param name="index">Index of the attribute to retrieve.</param>
            <param name="guidKey">The GUID that identifies this attribute.</param>
            <param name="value">A PROPVARIANT that receives the value.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaType.CopyAllItems(Microsoft.Psi.Audio.ComInterop.IMFAttributes)">
            <summary>
            Copies all of the attributes from this object into another attribute store.
            </summary>
            <param name="dest">The IMFAttributes interface of the attribute store that receives the copy.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaType.GetMajorType(System.Guid@)">
            <summary>
            Retrieves the major type of the format.
            </summary>
            <param name="guidMajorType">The major type GUID.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaType.IsCompressedFormat(System.Boolean@)">
            <summary>
            Queries whether the media type is a compressed format.
            </summary>
            <param name="compressed">A boolean value indicating if the format uses temporal compression.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaType.IsEqual(Microsoft.Psi.Audio.ComInterop.IMFMediaType,System.Int32@)">
            <summary>
            Compares two media types and determines whether they are identical.
            </summary>
            <param name="mediaType">The IMFMediaType interface of the media type to compare.</param>
            <param name="flags">
            A bitwise OR of zero or more flags, indicating the degree of similarity between the two media types.
            </param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaType.GetRepresentation(System.Guid,System.IntPtr@)">
            <summary>
            Retrieves an alternative representation of the media type.
            </summary>
            <param name="guidRepresentation">GUID that specifies the representation to retrieve.</param>
            <param name="ptrRepresentation">A pointer to a structure that contains the representation.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFMediaType.FreeRepresentation(System.Guid,System.IntPtr)">
            <summary>
            Frees memory that was allocated by the GetRepresentation method.
            </summary>
            <param name="guidRepresentation">GUID that was passed to the GetRepresentation method.</param>
            <param name="ptrRepresentation">Pointer to the buffer that was returned by the GetRepresentation method.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="T:Microsoft.Psi.Audio.ComInterop.IMFSample">
            <summary>
            IMFSample COM interface (defined in Mfobjects.h).
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.GetItem(System.Guid@,Microsoft.Psi.Audio.ComInterop.PropVariant@)">
            <summary>
            Retrieves the value associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="value">A PROPVARIANT that receives the value.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.GetItemType(System.Guid@,System.Int16@)">
            <summary>
            Retrieves the data type of the value associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="type">The attribute type, as an MF_ATTRIBUTE_TYPE enumeration value.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.CompareItem(System.Guid@,Microsoft.Psi.Audio.ComInterop.PropVariant@,System.Boolean@)">
            <summary>
            Queries whether a stored attribute value equals a specified PROPVARIANT.
            </summary>
            <param name="guidKey">A GUID that identifies which value to query.</param>
            <param name="value">PROPVARIANT that contains the value to compare.</param>
            <param name="result">A boolean value indicating whether the attribute matches the value.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.Compare(Microsoft.Psi.Audio.ComInterop.IMFAttributes,Microsoft.Psi.Audio.ComInterop.MFAttributesMatchType,System.Boolean@)">
            <summary>
            Compares the attributes on this object with the attributes on another object.
            </summary>
            <param name="theirs">An IMFAttributes interface to compare with this object.</param>
            <param name="matchType">
            Member of the MFAttributesMatchType enumeration, specifying the type of comparison to make.
            </param>
            <param name="result">A boolean value representing the match result.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.GetUINT32(System.Guid@,System.UInt32@)">
            <summary>
            Retrieves a UINT32 value associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="value">The UINT32 value.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.GetUINT64(System.Guid@,System.UInt64@)">
            <summary>
            Retrieves a UINT64 value associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="value">The UINT64 value.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.GetDouble(System.Guid@,System.Double@)">
            <summary>
            Retrieves a double value associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="value">The double value.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.GetGUID(System.Guid@,System.Guid@)">
            <summary>
            Retrieves a GUID value associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="guidValue">The GUID value.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.GetStringLength(System.Guid@,System.Int32@)">
            <summary>
            Retrieves the length of a string value associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="length">The length of the string value.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.GetString(System.Guid@,System.Text.StringBuilder,System.Int32,System.Int32@)">
            <summary>
            Retrieves a wide-character string associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="value">A StringBuilder to which the string value will be written.</param>
            <param name="size">The maximum length of the string value to return.</param>
            <param name="length">The length of the string.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.GetAllocatedString(System.Guid@,System.String,System.Int32@)">
            <summary>
            Retrieves a wide-character string associated with a key. This method allocates the memory for the string.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="value">The string value.</param>
            <param name="length">The length of the string.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.GetBlobSize(System.Guid@,System.Int32@)">
            <summary>
            Retrieves the length of a byte array associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="blobSize">The size of the array, in bytes.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.GetBlob(System.Guid@,System.Byte[],System.Int32,System.Int32@)">
            <summary>
            Retrieves a byte array associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="buf">A buffer allocated by the caller.</param>
            <param name="bufSize">The size of the buffer, in bytes.</param>
            <param name="blobSize">Receives the size of the byte array.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.GetAllocatedBlob(System.Guid@,System.Byte[]@,System.Int32@)">
            <summary>
            Retrieves a byte array associated with a key. This method allocates the memory for the array.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="buf">A copy of the array.</param>
            <param name="size">The size of the array, in bytes.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.GetUnknown(System.Guid@,System.Guid@,System.Object@)">
            <summary>
            Retrieves an interface pointer associated with a key.
            </summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="iid">Interface identifier (IID) of the interface to retrieve.</param>
            <param name="interfacePtr">The requested interface.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.SetItem(System.Guid@,Microsoft.Psi.Audio.ComInterop.PropVariant@)">
            <summary>
            Associates an attribute value with a key.
            </summary>
            <param name="guidKey">A GUID that identifies the value to set.</param>
            <param name="value">The value to associate with this key.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.DeleteItem(System.Guid@)">
            <summary>
            Removes a key/value pair from the object's attribute list.
            </summary>
            <param name="guidKey">A GUID that identifies the value to delete.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.DeleteAllItems">
            <summary>
            Removes all key/value pairs from the object's attribute list.
            </summary>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.SetUINT32(System.Guid@,System.UInt32)">
            <summary>
            Associates a UINT32 value with a key.
            </summary>
            <param name="guidKey">A GUID that identifies the value to set.</param>
            <param name="value">The value to associate with this key.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.SetUINT64(System.Guid@,System.UInt64)">
            <summary>
            Associates a UINT64 value with a key.
            </summary>
            <param name="guidKey">A GUID that identifies the value to set.</param>
            <param name="value">The value to associate with this key.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.SetDouble(System.Guid@,System.Double)">
            <summary>
            Associates a double value with a key.
            </summary>
            <param name="guidKey">A GUID that identifies the value to set.</param>
            <param name="value">The value to associate with this key.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.SetGUID(System.Guid@,System.Guid@)">
            <summary>
            Associates a GUID value with a key.
            </summary>
            <param name="guidKey">A GUID that identifies the value to set.</param>
            <param name="guidValue">The value to associate with this key.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.SetString(System.Guid@,System.String)">
            <summary>
            Associates a wide-character string with a key.
            </summary>
            <param name="guidKey">A GUID that identifies the value to set.</param>
            <param name="value">The string to associate with this key.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.SetBlob(System.Guid@,System.Byte[],System.Int32)">
            <summary>
            Associates a byte array with a key.
            </summary>
            <param name="guidKey">A GUID that identifies the value to set.</param>
            <param name="buf">The byte array to associate with this key.</param>
            <param name="size">Size of the array, in bytes.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.SetUnknown(System.Guid@,System.Object)">
            <summary>
            Associates an IUnknown pointer with a key.
            </summary>
            <param name="guidKey">A GUID that identifies the value to set.</param>
            <param name="interfacePtr">The value to associate with this key.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.LockStore">
            <summary>
            Locks the attribute store so that no other thread can access it.
            </summary>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.UnlockStore">
            <summary>
            Unlocks the attribute store.
            </summary>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.GetCount(System.Int32@)">
            <summary>
            Retrieves the number of attributes that are set on this object.
            </summary>
            <param name="items">The number of attributes.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.GetItemByIndex(System.Int32,System.Guid@,Microsoft.Psi.Audio.ComInterop.PropVariant@)">
            <summary>
            Retrieves an attribute at the specified index.
            </summary>
            <param name="index">Index of the attribute to retrieve.</param>
            <param name="guidKey">The GUID that identifies this attribute.</param>
            <param name="value">A PROPVARIANT that receives the value.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.CopyAllItems(Microsoft.Psi.Audio.ComInterop.IMFAttributes)">
            <summary>
            Copies all of the attributes from this object into another attribute store.
            </summary>
            <param name="dest">The IMFAttributes interface of the attribute store that receives the copy.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.GetSampleFlags(System.Int32@)">
            <summary>
            Retrieves flags associated with the sample.
            </summary>
            <param name="sampleFlags">The sample flags.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.SetSampleFlags(System.Int32)">
            <summary>
            Sets flags associated with the sample.
            </summary>
            <param name="sampleFlags">The sample flags.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.GetSampleTime(System.Int64@)">
            <summary>
            Retrieves the presentation time of the sample.
            </summary>
            <param name="hnsSampleTime">The presentation time of the sample.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.SetSampleTime(System.Int64)">
            <summary>
            Sets the presentation time of the sample.
            </summary>
            <param name="hnsSampleTime">The presentation time of the sample.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.GetSampleDuration(System.Int64@)">
            <summary>
            Retrieves the duration of the sample.
            </summary>
            <param name="hnsSampleDuration">The duration of the sample.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.SetSampleDuration(System.Int64)">
            <summary>
            Sets the duration of the sample.
            </summary>
            <param name="hnsSampleDuration">The duration of the sample.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.GetBufferCount(System.Int32@)">
            <summary>
            Retrieves the number of buffers in the sample.
            </summary>
            <param name="bufferCount">The number of buffers in the sample.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.GetBufferByIndex(System.Int32,Microsoft.Psi.Audio.ComInterop.IMFMediaBuffer@)">
            <summary>
            Retrieves a buffer from the sample.
            </summary>
            <param name="index">The buffer index.</param>
            <param name="buffer">The IMFMediaBuffer interface of the buffer.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.ConvertToContiguousBuffer(Microsoft.Psi.Audio.ComInterop.IMFMediaBuffer@)">
            <summary>
            Converts a sample with multiple buffers into a sample with a single buffer.
            </summary>
            <param name="buffer">The IMFMediaBuffer interface of the buffer.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.AddBuffer(Microsoft.Psi.Audio.ComInterop.IMFMediaBuffer)">
            <summary>
            Adds a buffer to the end of the list of buffers in the sample.
            </summary>
            <param name="buffer">The IMFMediaBuffer interface of the buffer.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.RemoveBufferByIndex(System.Int32)">
            <summary>
            Removes a buffer at a specified index from the sample.
            </summary>
            <param name="index">The buffer index.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.RemoveAllBuffers">
            <summary>
            Removes all buffers from the sample.
            </summary>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.GetTotalLength(System.Int32@)">
            <summary>
            Retrieves the total length of the valid data in all of the buffers in the sample.
            </summary>
            <param name="totalLength">The total length of the data.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFSample.CopyToBuffer(Microsoft.Psi.Audio.ComInterop.IMFMediaBuffer)">
            <summary>
            Copies the sample data to a buffer.
            </summary>
            <param name="buffer">The IMFMediaBuffer interface of the buffer.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="T:Microsoft.Psi.Audio.ComInterop.IMFTransform">
            <summary>
            IMFTransform COM interface (defined in Mftransform.h).
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFTransform.GetStreamLimits(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Retrieves the minimum and maximum number of input and output streams.
            </summary>
            <param name="inputMinimum">The minimum number of input streams.</param>
            <param name="inputMaximum">The maximum number of input streams.</param>
            <param name="outputMinimum">The minimum number of output streams.</param>
            <param name="outputMaximum">The maximum number of output streams.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFTransform.GetStreamCount(System.Int32@,System.Int32@)">
            <summary>
            Retrieves the current number of input and output streams on this MFT.
            </summary>
            <param name="inputStreams">The number of input streams.</param>
            <param name="outputStreams">The number of output streams.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFTransform.GetStreamIDs(System.Int32,System.Int32@,System.Int32,System.Int32@)">
            <summary>
            Retrieves the stream identifiers for the input and output streams on this MFT.
            </summary>
            <param name="inputIDArraySize">Number of elements in the inputIDs array. </param>
            <param name="inputIDs">An array of input stream identifiers.</param>
            <param name="outputIDArraySize">Number of elements in the outputIDs array.</param>
            <param name="outputIDs">An array of output stream identifiers.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFTransform.GetInputStreamInfo(System.Int32,Microsoft.Psi.Audio.ComInterop.MFTInputStreamInfo@)">
            <summary>
            Retrieves the buffer requirements and other information for an input stream.
            </summary>
            <param name="inputStreamID">The input stream identifier.</param>
            <param name="streamInfo">An MFTInputStreamInfo structure containing information about the stream.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFTransform.GetOutputStreamInfo(System.Int32,Microsoft.Psi.Audio.ComInterop.MFTInputStreamInfo@)">
            <summary>
            Retrieves the buffer requirements and other information for an output stream on this MFT.
            </summary>
            <param name="outputStreamID">The output stream identifier.</param>
            <param name="streamInfo">An MFTInputStreamInfo structure containing information about the stream.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFTransform.GetAttributes(Microsoft.Psi.Audio.ComInterop.IMFAttributes@)">
            <summary>
            Retrieves the attribute store for this MFT.
            </summary>
            <param name="attributes">An IMFAttributes interface.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFTransform.GetInputStreamAttributes(System.Int32,Microsoft.Psi.Audio.ComInterop.IMFAttributes@)">
            <summary>
            Retrieves the attribute store for an input stream on this MFT.
            </summary>
            <param name="inputStreamID">The input stream identifier.</param>
            <param name="attributes">An IMFAttributes interface.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFTransform.GetOutputStreamAttributes(System.Int32,Microsoft.Psi.Audio.ComInterop.IMFAttributes@)">
            <summary>
            Retrieves the attribute store for an output stream on this MFT.
            </summary>
            <param name="outputStreamID">The output stream identifier.</param>
            <param name="attributes">An IMFAttributes interface.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFTransform.DeleteInputStream(System.Int32)">
            <summary>
            Removes an input stream from this MFT.
            </summary>
            <param name="streamID">The input stream identifier.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFTransform.AddInputStreams(System.Int32,System.Int32[])">
            <summary>
            Adds one or more new input streams to this MFT.
            </summary>
            <param name="streams">Number of streams to add.</param>
            <param name="streamIDs">An array of input stream identifiers.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFTransform.GetInputAvailableType(System.Int32,System.Int32,Microsoft.Psi.Audio.ComInterop.IMFMediaType@)">
            <summary>
            Retrieves a possible media type for an input stream on this MFT.
            </summary>
            <param name="inputStreamID">Input stream identifier.</param>
            <param name="typeIndex">Index of the media type to retrieve.</param>
            <param name="type">The IMFMediaType interface.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFTransform.GetOutputAvailableType(System.Int32,System.Int32,Microsoft.Psi.Audio.ComInterop.IMFMediaType@)">
            <summary>
            Retrieves an available media type for an output stream on this MFT.
            </summary>
            <param name="outputStreamID">Output stream identifier.</param>
            <param name="typeIndex">Index of the media type to retrieve.</param>
            <param name="type">The IMFMediaType interface.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFTransform.SetInputType(System.Int32,Microsoft.Psi.Audio.ComInterop.IMFMediaType,System.Int32)">
            <summary>
            Sets, tests, or clears the media type for an input stream on this MFT.
            </summary>
            <param name="inputStreamID">Input stream identifier.</param>
            <param name="type">The IMFMediaType interface.</param>
            <param name="flags">Zero or more flags from the _MFT_SET_TYPE_FLAGS enumeration.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFTransform.SetOutputType(System.Int32,Microsoft.Psi.Audio.ComInterop.IMFMediaType,System.Int32)">
            <summary>
            Sets, tests, or clears the media type for an output stream on this MFT.
            </summary>
            <param name="outputStreamID">Output stream identifier.</param>
            <param name="type">The IMFMediaType interface.</param>
            <param name="flags">Zero or more flags from the _MFT_SET_TYPE_FLAGS enumeration.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFTransform.GetInputCurrentType(System.Int32,Microsoft.Psi.Audio.ComInterop.IMFMediaType@)">
            <summary>
            Retrieves the current media type for an input stream on this MFT.
            </summary>
            <param name="inputStreamID">Input stream identifier.</param>
            <param name="type">The IMFMediaType interface.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFTransform.GetOutputCurrentType(System.Int32,Microsoft.Psi.Audio.ComInterop.IMFMediaType@)">
            <summary>
            Retrieves the current media type for an output stream on this MFT.
            </summary>
            <param name="outputStreamID">Output stream identifier.</param>
            <param name="type">The IMFMediaType interface.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFTransform.GetInputStatus(System.Int32,System.Int32@)">
            <summary>
            Queries whether an input stream on this MFT can accept more data.
            </summary>
            <param name="inputStreamID">Input stream identifier.</param>
            <param name="flags">A member of the _MFT_INPUT_STATUS_FLAGS enumeration, or zero.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFTransform.GetOutputStatus(System.Int32@)">
            <summary>
            Queries whether the transform is ready to produce output data.
            </summary>
            <param name="flags">A member of the _MFT_OUTPUT_STATUS_FLAGS enumeration, or zero.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFTransform.SetOutputBounds(System.Int64,System.Int64)">
            <summary>
            Sets the range of timestamps the client needs for output.
            </summary>
            <param name="hnsLowerBound">Specifies the earliest time stamp.</param>
            <param name="hnsUpperBound">Specifies the latest  time stamp.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFTransform.ProcessEvent(System.Int32,Microsoft.Psi.Audio.ComInterop.IMFMediaEvent)">
            <summary>
            Sends an event to an input stream on this MFT.
            </summary>
            <param name="inputStreamID">Input stream identifier.</param>
            <param name="mediaEvent">The IMFMediaEvent interface of an event object.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFTransform.ProcessMessage(Microsoft.Psi.Audio.ComInterop.MFTMessageType,System.IntPtr)">
            <summary>
            Sends a message to the MFT.
            </summary>
            <param name="message">The message to send.</param>
            <param name="param">Message parameter. The meaning of this parameter depends on the message type.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFTransform.ProcessInput(System.Int32,Microsoft.Psi.Audio.ComInterop.IMFSample,System.Int32)">
            <summary>
            Delivers data to an input stream on this MFT.
            </summary>
            <param name="inputStreamID">Input stream identifier.</param>
            <param name="sample">The IMFSample interface of the input sample.</param>
            <param name="flags">Reserved. Must be zero. </param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMFTransform.ProcessOutput(System.Int32,System.Int32,Microsoft.Psi.Audio.ComInterop.MFTOutputDataBuffer@,System.Int32@)">
            <summary>
            Generates output from the current input data.
            </summary>
            <param name="flags">Bitwise OR of zero or more flags from the _MFT_PROCESS_OUTPUT_FLAGS enumeration.</param>
            <param name="outputBufferCount">Number of elements in the outputSamples array (must be 1).</param>
            <param name="outputSamples">A reference to an MFTOutputDataBuffer structure.</param>
            <param name="pdwStatus">A bitwise OR of zero or more flags from the _MFT_PROCESS_OUTPUT_STATUS enumeration.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="T:Microsoft.Psi.Audio.ComInterop.IMMDevice">
            <summary>
            IMMDevice COM interface (defined in Mmdeviceapi.h).
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMMDevice.Activate(System.Guid@,Microsoft.Psi.Audio.ComInterop.ClsCtx,System.IntPtr)">
            <summary>
            Creates a COM object with the specified interface.
            </summary>
            <param name="iid">The interface identifier.</param>
            <param name="clsCtx">The execution context in which the code that manages the newly created object will run.</param>
            <param name="activationParams">
            Set to NULL to activate an IAudioClient, IAudioEndpointVolume, IAudioMeterInformation,
            IAudioSessionManager, or IDeviceTopology interface on an audio endpoint device.
            </param>
            <returns>The interface specified by parameter iid.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMMDevice.OpenPropertyStore(System.Int32)">
            <summary>
            Gets an interface to the device's property store.
            </summary>
            <param name="stgmAccess">The storage-access mode.</param>
            <returns>The IPropertyStore interface of the device's property store.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMMDevice.GetId">
            <summary>
            Gets a string that identifies the device.
            </summary>
            <returns>The endpoint device ID string.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMMDevice.GetState">
            <summary>
            Gets the current state of the device.
            </summary>
            <returns>The device-state value, as one of the DEVICE_STATE_XXX constants.</returns>
        </member>
        <member name="T:Microsoft.Psi.Audio.ComInterop.IMMDeviceCollection">
            <summary>
            IMMDeviceCollection COM interface (defined in Mmdeviceapi.h).
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMMDeviceCollection.GetCount">
            <summary>
            Retrieves a count of the devices in the device collection.
            </summary>
            <returns>The number of devices in the collection.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMMDeviceCollection.Item(System.Int32)">
            <summary>
            Retrieves the specified item in the device collection.
            </summary>
            <param name="deviceNumber">The device number.</param>
            <returns>The IMMDevice interface of the specified item in the device collection.</returns>
        </member>
        <member name="T:Microsoft.Psi.Audio.ComInterop.IMMDeviceEnumerator">
            <summary>
            IMMDeviceEnumerator COM interface (defined in Mmdeviceapi.h).
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMMDeviceEnumerator.EnumAudioEndpoints(Microsoft.Psi.Audio.ComInterop.EDataFlow,System.Int32)">
            <summary>
            Generates a collection of audio endpoint devices that meet the specified criteria.
            </summary>
            <param name="dataFlow">The data-flow direction for the endpoint devices in the collection.</param>
            <param name="stateMask">The state or states of the endpoints that are to be included in the collection.</param>
            <returns>The IMMDeviceCollection interface of the device-collection object.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMMDeviceEnumerator.GetDefaultAudioEndpoint(Microsoft.Psi.Audio.ComInterop.EDataFlow,Microsoft.Psi.Audio.ComInterop.ERole)">
            <summary>
            Retrieves the default audio endpoint for the specified data-flow direction and role.
            </summary>
            <param name="dataFlow">The data-flow direction for the endpoint device.</param>
            <param name="role">The role of the endpoint device.</param>
            <returns>The IMMDevice interface of the endpoint object for the default audio endpoint device.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMMDeviceEnumerator.GetDevice(System.String)">
            <summary>
            Retrieves an endpoint device that is specified by an endpoint device-identification string.
            </summary>
            <param name="id">A string containing the endpoint ID.</param>
            <returns>The IMMDevice interface for the specified device.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMMDeviceEnumerator.RegisterEndpointNotificationCallback(Microsoft.Psi.Audio.ComInterop.IMMNotificationClient)">
            <summary>
            Registers a client's notification callback interface.
            </summary>
            <param name="client">
            The IMMNotificationClient interface that the client is registering for notification callbacks.
            </param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMMDeviceEnumerator.UnregisterEndpointNotificationCallback(Microsoft.Psi.Audio.ComInterop.IMMNotificationClient)">
            <summary>
            Deletes the registration of a notification interface that the client registered in a previous call to
            the IMMDeviceEnumerator.RegisterEndpointNotificationCallback method.
            </summary>
            <param name="client">The client's IMMNotificationClient interface.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="T:Microsoft.Psi.Audio.ComInterop.IMMNotificationClient">
            <summary>
            IMMNotificationClient COM interface (defined in Mmdeviceapi.h).
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMMNotificationClient.OnDeviceStateChanged(System.String,System.Int32)">
            <summary>
            Indicates that the state of an audio endpoint device has changed.
            </summary>
            <param name="deviceId">The endpoint ID string that identifies the audio endpoint device.</param>
            <param name="newState">Specifies the new state of the endpoint device.</param>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMMNotificationClient.OnDeviceAdded(System.String)">
            <summary>
            Indicates that a new audio endpoint device has been added.
            </summary>
            <param name="pwstrDeviceId">The endpoint ID string that identifies the audio endpoint device.</param>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMMNotificationClient.OnDeviceRemoved(System.String)">
            <summary>
            Indicates that an audio endpoint device has been removed.
            </summary>
            <param name="deviceId">The endpoint ID string that identifies the audio endpoint device.</param>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMMNotificationClient.OnDefaultDeviceChanged(Microsoft.Psi.Audio.ComInterop.EDataFlow,Microsoft.Psi.Audio.ComInterop.ERole,System.String)">
            <summary>
            Notifies the client that the default audio endpoint device for a particular role has changed.
            </summary>
            <param name="flow">The data-flow direction of the endpoint device.</param>
            <param name="role">The device role of the audio endpoint device.</param>
            <param name="defaultDeviceId">The endpoint ID string that identifies audio endpoint device.</param>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IMMNotificationClient.OnPropertyValueChanged(System.String,Microsoft.Psi.Audio.ComInterop.PropertyKey)">
            <summary>
            Indicates that the value of a property belonging to an audio endpoint device has changed.
            </summary>
            <param name="pwstrDeviceId">The endpoint ID string that identifies the audio endpoint device.</param>
            <param name="key">A PROPERTYKEY structure that specifies the property.</param>
        </member>
        <member name="T:Microsoft.Psi.Audio.ComInterop.IPropertyStore">
            <summary>
            IPropertyStore COM interface (defined in Propsys.h).
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IPropertyStore.GetCount">
            <summary>
            Gets the number of properties attached to the file.
            </summary>
            <returns>The property count.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IPropertyStore.GetAt(System.Int32)">
            <summary>
            Gets a property key from an item's array of properties.
            </summary>
            <param name="property">The index of the property key in the array of PropertyKey structures.</param>
            <returns>The unique identifier for the property..</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IPropertyStore.GetValue(Microsoft.Psi.Audio.ComInterop.PropertyKey@)">
            <summary>
            Gets data for a specific property.
            </summary>
            <param name="key">A reference to the PropertyKey structure retrieved through IPropertyStore.GetAt.</param>
            <returns>A PropVariant structure that contains the property data.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IPropertyStore.SetValue(Microsoft.Psi.Audio.ComInterop.PropertyKey@,Microsoft.Psi.Audio.ComInterop.PropVariant@)">
            <summary>
            Sets a new property value, or replaces or removes an existing value.
            </summary>
            <param name="key">A reference to the PropertyKey structure retrieved through IPropertyStore.GetAt.</param>
            <param name="value">A PropVariant structure that contains the new property data.</param>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.IPropertyStore.Commit">
            <summary>
            Saves a property change.
            </summary>
            <returns>An HRESULT return code.</returns>
        </member>
        <member name="T:Microsoft.Psi.Audio.ComInterop.MFAttributesMatchType">
            <summary>
            MF_ATTRIBUTES_MATCH_TYPE enum (defined in mfobjects.h).
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.MFAttributesMatchType.OutItems">
            <summary>
            MF_ATTRIBUTES_MATCH_OUR_ITEMS = 0
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.MFAttributesMatchType.TheirItems">
            <summary>
            MF_ATTRIBUTES_MATCH_THEIR_ITEMS = 1
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.MFAttributesMatchType.AllItems">
            <summary>
            MF_ATTRIBUTES_MATCH_ALL_ITEMS = 2
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.MFAttributesMatchType.Intersection">
            <summary>
            MF_ATTRIBUTES_MATCH_INTERSECTION = 3
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.MFAttributesMatchType.Smaller">
            <summary>
            MF_ATTRIBUTES_MATCH_SMALLER = 4
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Audio.ComInterop.MFTInputStreamInfo">
            <summary>
            MFT_INPUT_STREAM_INFO structure (defined in Mftransform.h).
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.MFTInputStreamInfo.MaxLatency">
            <summary>
            hnsMaxLatency.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.MFTInputStreamInfo.Flags">
            <summary>
            dwFlags.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.MFTInputStreamInfo.Size">
            <summary>
            cbSize.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.MFTInputStreamInfo.MaxLookahead">
            <summary>
            cbMaxLookahead.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.MFTInputStreamInfo.Alignment">
            <summary>
            cbAlignment.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Audio.ComInterop.MFTMessageType">
            <summary>
            MFT_MESSAGE_TYPE enum (defined in mftransform.h).
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.MFTMessageType.COMMAND_FLUSH">
            <summary>
            MFT_MESSAGE_COMMAND_FLUSH = 0
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.MFTMessageType.COMMAND_DRAIN">
            <summary>
            MFT_MESSAGE_COMMAND_DRAIN = 0x1
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.MFTMessageType.SET_D3D_MANAGER">
            <summary>
            MFT_MESSAGE_SET_D3D_MANAGER = 0x2
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.MFTMessageType.DROP_SAMPLES">
            <summary>
            MFT_MESSAGE_DROP_SAMPLES = 0x3
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.MFTMessageType.COMMAND_TICK">
            <summary>
            MFT_MESSAGE_COMMAND_TICK = 0x4
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.MFTMessageType.NOTIFY_BEGIN_STREAMING">
            <summary>
            MFT_MESSAGE_NOTIFY_BEGIN_STREAMING = 0x10000000
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.MFTMessageType.NOTIFY_END_STREAMING">
            <summary>
            MFT_MESSAGE_NOTIFY_END_STREAMING = 0x10000001
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.MFTMessageType.NOTIFY_END_OF_STREAM">
            <summary>
            MFT_MESSAGE_NOTIFY_END_OF_STREAM = 0x10000002
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.MFTMessageType.NOTIFY_START_OF_STREAM">
            <summary>
            MFT_MESSAGE_NOTIFY_START_OF_STREAM = 0x10000003
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.MFTMessageType.NOTIFY_RELEASE_RESOURCES">
            <summary>
            MFT_MESSAGE_NOTIFY_RELEASE_RESOURCES = 0x10000004
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.MFTMessageType.NOTIFY_REACQUIRE_RESOURCES">
            <summary>
            MFT_MESSAGE_NOTIFY_REACQUIRE_RESOURCES = 0x10000005
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.MFTMessageType.NOTIFY_EVENT">
            <summary>
            MFT_MESSAGE_NOTIFY_EVENT = 0x10000006
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.MFTMessageType.COMMAND_SET_OUTPUT_STREAM_STATE">
            <summary>
            MFT_MESSAGE_COMMAND_SET_OUTPUT_STREAM_STATE = 0x10000007
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.MFTMessageType.COMMAND_FLUSH_OUTPUT_STREAM">
            <summary>
            MFT_MESSAGE_COMMAND_FLUSH_OUTPUT_STREAM = 0x10000008
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.MFTMessageType.COMMAND_MARKER">
            <summary>
            MFT_MESSAGE_COMMAND_MARKER = 0x20000000
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Audio.ComInterop.MFTOutputDataBuffer">
            <summary>
            MFT_OUTPUT_DATA_BUFFER structure (defined in Mftransform.h).
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.MFTOutputDataBuffer.StreamID">
            <summary>
            dwStreamID.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.MFTOutputDataBuffer.Sample">
            <summary>
            pSample.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.MFTOutputDataBuffer.Status">
            <summary>
            dwStatus.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.MFTOutputDataBuffer.Events">
            <summary>
            pEvents.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Audio.ComInterop.MMDeviceEnumerator">
            <summary>
            MMDeviceEnumerator COM class declaration.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Audio.ComInterop.PropertyKey">
            <summary>
            PROPERTYKEY struct.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.PropertyKey.FormatId">
            <summary>
            Format ID.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.PropertyKey.PropertyId">
            <summary>
            Property ID.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Audio.ComInterop.PropVariant">
            <summary>
            PROPVARIANT structure (defined in Propidl.h).
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Audio.ComInterop.PropVariant.Value">
            <summary>
            Gets the property value.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.ComInterop.PropVariant.Clear">
            <summary>
            Calls PropVariantClear to free all elements that can be freed.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Audio.ComInterop.Blob">
            <summary>
            Blob data structure.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.Blob.Size">
            <summary>
            Blob data size.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Audio.ComInterop.Blob.Data">
            <summary>
            Blob data.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Audio.DeviceUtil">
            <summary>
            Provides a collection of audio device utility methods.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.DeviceUtil.GetDeviceFriendlyName(Microsoft.Psi.Audio.ComInterop.IMMDevice)">
            <summary>
            Gets the friendly name of the specified device.
            </summary>
            <param name="device">The <see cref="T:Microsoft.Psi.Audio.ComInterop.IMMDevice"/> interface of the device.</param>
            <returns>The friendly name of the device.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.DeviceUtil.GetDefaultDevice(Microsoft.Psi.Audio.ComInterop.EDataFlow,Microsoft.Psi.Audio.ComInterop.ERole)">
            <summary>
            Gets the default device for a given role and data flow.
            </summary>
            <param name="dataFlow">The data flow.</param>
            <param name="role">The device role.</param>
            <returns>The default device matching the data flow and role.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.DeviceUtil.GetDeviceByName(Microsoft.Psi.Audio.ComInterop.EDataFlow,System.String)">
            <summary>
            Gets a specific device by its friendly name.
            </summary>
            <param name="dataFlow">The data flow.</param>
            <param name="deviceDescription">The device friendly name.</param>
            <returns>The default device matching the supplied name.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.DeviceUtil.GetAvailableDevices(Microsoft.Psi.Audio.ComInterop.EDataFlow)">
            <summary>
            Gets a collection of available devices.
            </summary>
            <param name="dataFlow">The data flow.</param>
            <returns>A collection of available devices matching the supplied role.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.DeviceUtil.CreateResampler(Microsoft.Psi.Audio.WaveFormat,Microsoft.Psi.Audio.WaveFormat)">
            <summary>
            Create Media Foundation transform that resamples audio in specified input format
            into specified output format.
            </summary>
            <param name="inputFormat">
            Wave format input to resampling operation.
            </param>
            <param name="outputFormat">
            Wave format output from resampling operation.
            </param>
            <returns>
            Media transform object that will resample audio.
            </returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.DeviceUtil.CreateResamplerBuffer(System.Int32,Microsoft.Psi.Audio.ComInterop.IMFSample@,Microsoft.Psi.Audio.ComInterop.IMFMediaBuffer@)">
            <summary>
            Create a media buffer to be used as input or output for resampler.
            </summary>
            <param name="bufferSize">Size of buffer to create.</param>
            <param name="sample">Media Foundation sample created.</param>
            <param name="buffer">Media buffer created.</param>
        </member>
        <member name="M:Microsoft.Psi.Audio.DeviceUtil.GetMediaSubtype(Microsoft.Psi.Audio.WaveFormat)">
            <summary>
            Gets the appropriate Media Foundation audio media subtype from the specified wave format.
            </summary>
            <param name="format">
            Input wave format to convert.
            </param>
            <returns>
            Media Foundation audio subtype resulting from conversion.
            </returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.DeviceUtil.CreateMediaType(Microsoft.Psi.Audio.WaveFormat)">
            <summary>
            Converts the specified wave format into the appropriate Media Foundation audio media type.
            </summary>
            <param name="format">Input wave format to convert.</param>
            <returns>Media Foundation type resulting from conversion.</returns>
        </member>
        <member name="T:Microsoft.Psi.Audio.MFResampler">
            <summary>
            The Media Foundation audio resampler class.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.MFResampler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Audio.MFResampler"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.MFResampler.Dispose">
            <summary>
            Disposes the <see cref="T:Microsoft.Psi.Audio.MFResampler"/> object.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.MFResampler.Initialize(System.Int32,Microsoft.Psi.Audio.WaveFormat,Microsoft.Psi.Audio.WaveFormat,Microsoft.Psi.Audio.AudioDataAvailableCallback)">
            <summary>
            Initialize the resampler.
            </summary>
            <param name="targetLatencyInMs">
            The target maximum number of milliseconds of acceptable lag between
            input and resampled output audio samples.
            </param>
            <param name="inFormat">
            The input format of the audio to be resampled.
            </param>
            <param name="outFormat">
            The output format of the resampled audio.
            </param>
            <param name="callback">
            Callback delegate which will receive the resampled data.
            </param>
        </member>
        <member name="M:Microsoft.Psi.Audio.MFResampler.Resample(System.IntPtr,System.Int32,System.Int64)">
            <summary>
            Resamples audio data.
            </summary>
            <param name="dataPtr">
            Pointer to a buffer containing the audio data to be resampled.
            </param>
            <param name="length">
            The number of bytes in dataPtr.
            </param>
            <param name="timestamp">
            The timestamp in 100-ns ticks of the first sample in pbData.
            </param>
            <returns>
            The number of bytes in dataPtr that were processed.
            </returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.MFResampler.ProcessResamplerOutput">
            <summary>
            Get data output from audio resampler and raises a callback.
            </summary>
            <returns>The number of bytes of resampled data.</returns>
        </member>
        <member name="T:Microsoft.Psi.Audio.NativeMethods">
            <summary>
            Native methods.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.NativeMethods.PropVariantClear(Microsoft.Psi.Audio.ComInterop.PropVariant@)">
            <summary>
            Frees all elements that can be freed in a given PropVariant structure.
            </summary>
            <param name="pvar">
            A reference to an initialized PropVariant structure for which any deallocatable elements
            are to be freed. On return, all zeroes are written to the PROPVARIANT structure.
            </param>
            <returns>
            S_OK (0) if the VT types are recognized and all items that can be freed have been freed.
            STG_E_INVALIDPARAMETER (0x80030057) if the variant has an unknown VT type.
            </returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.NativeMethods.MFCreateSample">
            <summary>
            Creates an empty media sample.
            </summary>
            <returns>The IMFSample interface of the media sample.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.NativeMethods.MFCreateMediaType">
            <summary>
            Creates an empty media type.
            </summary>
            <returns>The IMFMediaType interface.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.NativeMethods.MFCreateMemoryBuffer(System.Int32)">
            <summary>
            Allocates system memory and creates a media buffer to manage it.
            </summary>
            <param name="maxLength">Size of the buffer, in bytes.</param>
            <returns>The IMFMediaBuffer interface of the media buffer.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.NativeMethods.AvSetMmThreadCharacteristics(System.String,System.Int32@)">
            <summary>
            Associates the calling thread with the specified task.
            </summary>
            <param name="taskName">
            The name of the task to be performed. This name must match the name of one of the subkeys of the following
            key HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks.
            </param>
            <param name="taskIndex">
            The unique task identifier. The first time this function is called, this value must be 0 on input.
            The index value is returned on output and can be used as input in subsequent calls.
            </param>
            <returns>
            If the function succeeds, it returns a handle to the task. If the function fails, it returns 0.
            To retrieve extended error information, call GetLastError.
            </returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.NativeMethods.AvRevertMmThreadCharacteristics(System.Int32)">
            <summary>
            Indicates that a thread is no longer performing work associated with the specified task.
            </summary>
            <param name="avrtHandle">
            A handle to the task returned by the AvSetMmThreadCharacteristics.
            </param>
            <returns>
            If the function succeeds, the return value is nonzero. If the function fails, the return value
            is zero. To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="T:Microsoft.Psi.Audio.Operators">
            <summary>
            Stream operators and extension methods for Microsoft.Psi.Audio.Windows.
            </summary>
            <remarks>
            These are a collection of extension methods defining various audio operators on <see cref="T:Microsoft.Psi.Audio.AudioBuffer"/> streams.
            </remarks>
        </member>
        <member name="M:Microsoft.Psi.Audio.Operators.Resample(Microsoft.Psi.IProducer{Microsoft.Psi.Audio.AudioBuffer},Microsoft.Psi.Audio.AudioResamplerConfiguration,Microsoft.Psi.DeliveryPolicy{Microsoft.Psi.Audio.AudioBuffer})">
            <summary>
            Resamples an audio stream.
            </summary>
            <param name="source">A stream of audio to be resampled.</param>
            <param name="configuration">The resampler configuration.</param>
            <param name="deliveryPolicy">An optional delivery policy.</param>
            <returns>A stream of resampled audio.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.Operators.Resample(Microsoft.Psi.IProducer{Microsoft.Psi.Audio.AudioBuffer},Microsoft.Psi.Audio.WaveFormat,Microsoft.Psi.DeliveryPolicy{Microsoft.Psi.Audio.AudioBuffer})">
            <summary>
            Resamples an audio stream.
            </summary>
            <param name="source">A stream audio to be resampled.</param>
            <param name="outputFormat">The desired audio output format for the resampled stream.</param>
            <param name="deliveryPolicy">An optional delivery policy.</param>
            <returns>A stream of resampled audio.</returns>
        </member>
        <member name="T:Microsoft.Psi.Audio.WasapiCapture">
            <summary>
            Implements the services required to acquire audio from audio capture devices.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.WasapiCapture.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Audio.WasapiCapture"/> class.
            </summary>
        </member>
        <member name="E:Microsoft.Psi.Audio.WasapiCapture.AudioDataAvailableEvent">
            <summary>
            An event that is raised whenever new audio samples have been captured.
            </summary>
        </member>
        <member name="E:Microsoft.Psi.Audio.WasapiCapture.AudioVolumeNotification">
            <summary>
            An event that is raised whenever there is a change to the audio input level.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Audio.WasapiCapture.MixFormat">
            <summary>
            Gets the captured output format. This property will only be valid after StartCapture has been called
            and will return the output format of the captured audio data from the selected audio capture device.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Audio.WasapiCapture.AudioLevel">
            <summary>
            Gets or sets the audio capture level.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Audio.WasapiCapture.Name">
            <summary>
            Gets the friendly name of the audio capture device.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.WasapiCapture.GetAvailableCaptureDevices">
            <summary>
            Gets a list of available audio capture devices.
            </summary>
            <returns>
            An array of available capture device names.
            </returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.WasapiCapture.Dispose">
            <summary>
            Disposes an instance of the <see cref="T:Microsoft.Psi.Audio.WasapiCapture"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.WasapiCapture.Initialize(System.String)">
            <summary>
            Initializes the audio capture device.
            </summary>
            <param name="deviceDescription">
            The friendly name description of the device to capture from. This is usually
            something like "Microphone Array (USB Audio)". To capture from
            the default device, pass in NULL or an empty string.
            </param>
        </member>
        <member name="M:Microsoft.Psi.Audio.WasapiCapture.StartCapture(System.Int32,System.Int32,System.Single,Microsoft.Psi.Audio.WaveFormat,System.Boolean,System.Boolean)">
            <summary>
            Starts capturing audio data.
            </summary>
            <param name="targetLatencyInMs">
            The target maximum number of milliseconds of acceptable lag between
            live sound being produced and capture operation.
            </param>
            <param name="audioEngineBufferInMs">
            The amount of audio that may be buffered by the audio engine between
            reads.
            </param>
            <param name="gain">
            The gain to be applied to the captured audio.
            </param>
            <param name="outFormat">
            The desired output format of the captured audio.
            </param>
            <param name="speech">
            If true, optimizes the audio capture pipeline for speech recognition.
            </param>
            <param name="eventDrivenCapture">
            If true, initialize Windows audio capture in event-driven mode. The audio capture engine will call
            the <see cref="M:Microsoft.Psi.Audio.WasapiCapture.AudioDataAvailableCallback(System.IntPtr,System.Int32,System.Int64)"/> handler as soon as data is available, at intervals
            determined by the audio engine (which may be less than the <paramref name="targetLatencyInMs"/>).
            This captures audio with the lowest possible latency while still allowing for buffering up to the
            amount of time specified by <paramref name="targetLatencyInMs"/> (when for example the system is
            under heavy load and the capture callback is unable to service audio packets at the rate at which
            the audio engine returns captured audio packets).
            </param>
        </member>
        <member name="M:Microsoft.Psi.Audio.WasapiCapture.StopCapture">
            <summary>
            Stops capturing audio data.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.WasapiCapture.AudioDataAvailableCallback(System.IntPtr,System.Int32,System.Int64)">
            <summary>
            Callback function that is passed to WASAPI to call whenever it has
            new audio samples ready and waiting to be read.
            </summary>
            <param name="data">
            Pointer to the native buffer containing the new audio data.
            </param>
            <param name="length">
            The number of bytes of audio data available to be read.
            </param>
            <param name="timestamp">
            The timestamp in 100-ns ticks of the first sample in data.
            </param>
        </member>
        <member name="M:Microsoft.Psi.Audio.WasapiCapture.AudioVolumeCallback(Microsoft.Psi.Audio.ComInterop.AudioVolumeNotificationData)">
            <summary>
            Callback function that is passed to the audio endpoint to call whenever
            there is a new audio volume notification.
            </summary>
            <param name="data">
            The audio volume notification data.
            </param>
        </member>
        <member name="T:Microsoft.Psi.Audio.AudioDataAvailableCallback">
            <summary>
            The callback delegate that is invoked whenever new audio data is captured.
            </summary>
            <param name="data">A pointer to the audio buffer.</param>
            <param name="length">The number of bytes of data available in the audio buffer.</param>
            <param name="timestamp">The timestamp of the audio buffer.</param>
        </member>
        <member name="T:Microsoft.Psi.Audio.WasapiCaptureClient">
            <summary>
            The WASAPI capture class.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.WasapiCaptureClient.#ctor(Microsoft.Psi.Audio.ComInterop.IMMDevice,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Audio.WasapiCaptureClient"/> class.
            </summary>
            <param name="endpoint">The audio endpoint device.</param>
            <param name="isEventDriven">If true, uses WASAPI event-driven audio capture.</param>
        </member>
        <member name="P:Microsoft.Psi.Audio.WasapiCaptureClient.MixFormat">
            <summary>
            Gets the mix format of the captured audio.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.WasapiCaptureClient.Dispose">
            <summary>
            Disposes the <see cref="T:Microsoft.Psi.Audio.WasapiCaptureClient"/> object.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.WasapiCaptureClient.Initialize(System.Int32,System.Int32,System.Single,Microsoft.Psi.Audio.WaveFormat,Microsoft.Psi.Audio.AudioDataAvailableCallback,System.Boolean)">
            <summary>
            Initialize the capturer.
            </summary>
            <param name="engineLatency">
            Number of milliseconds of acceptable lag between live sound being produced and recording operation.
            </param>
            <param name="engineBuffer">
            Number of milliseconds of audio that may be buffered between reads.
            </param>
            <param name="gain">
            The gain to be applied to the audio after capture.
            </param>
            <param name="outFormat">
            The format of the audio to be captured. If this is NULL, the default audio format of the
            capture device will be used.
            </param>
            <param name="callback">
            Callback function delegate which will handle the captured data.
            </param>
            <param name="speech">
            If true, sets the audio category to speech to optimize audio pipeline for speech recognition.
            </param>
        </member>
        <member name="M:Microsoft.Psi.Audio.WasapiCaptureClient.Start">
            <summary>
             Start capturing audio data.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.WasapiCaptureClient.Stop">
            <summary>
            Stop the capturer.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.WasapiCaptureClient.DoCaptureThread">
            <summary>
            Capture thread - captures audio from WASAPI, resampling it if necessary.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.WasapiCaptureClient.ProcessResamplerInput(System.IntPtr,System.Int32,System.Int32,System.Int64)">
            <summary>
            Take audio data captured from WASAPI and feed it as input to audio resampler.
            </summary>
            <param name="bufferPtr">
            [in] Buffer holding audio data from WASAPI.
            </param>
            <param name="bufferSize">
            [in] Number of bytes available in pBuffer.
            </param>
            <param name="flags">
            [in] Flags returned from WASAPI capture.
            </param>
            <param name="qpcPosition">
            [in] The value of the performance counter in 100-nanosecond ticks at the time
            the first audio frame in pBuffer was recorded.
            </param>
        </member>
        <member name="M:Microsoft.Psi.Audio.WasapiCaptureClient.ProcessResamplerOutput">
            <summary>
            Get data output from audio resampler and raises a callback.
            </summary>
            <returns>Number of bytes captured.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.WasapiCaptureClient.InitializeAudioEngine">
            <summary>
            Initialize WASAPI in timer driven mode, and retrieve a capture client for the transport.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.WasapiCaptureClient.LoadFormat">
            <summary>
            Retrieve the format we'll use to capture samples.
            We use the Mix format since we're capturing in shared mode.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Audio.WasapiRender">
            <summary>
            Implements the services required to play audio to audio renderer devices.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.WasapiRender.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Audio.WasapiRender"/> class.
            </summary>
        </member>
        <member name="E:Microsoft.Psi.Audio.WasapiRender.AudioVolumeNotification">
            <summary>
            An event that is raised whenever there is a change to the audio volume.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Audio.WasapiRender.MixFormat">
            <summary>
            Gets the expected audio format. This property will only be valid after StartRendering has been called
            and will return the expected format of the audio being rendered on the selected audio renderer device.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Audio.WasapiRender.AudioLevel">
            <summary>
            Gets or sets the audio output level.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Audio.WasapiRender.Name">
            <summary>
            Gets the friendly name of the audio renderer device.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.WasapiRender.GetAvailableRenderDevices">
            <summary>
            Gets a list of available audio render devices.
            </summary>
            <returns>
            An array of available render device names.
            </returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.WasapiRender.Dispose">
            <summary>
            Disposes an instance of the <see cref="T:Microsoft.Psi.Audio.WasapiRender"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.WasapiRender.Initialize(System.String)">
            <summary>
            Initializes the audio renderer device.
            </summary>
            <param name="deviceDescription">
            The friendly name description of the device to render to. This is usually
            something like "Speakers (High Definition Audio)". To just use the
            default device, pass in NULL or an empty string.
            </param>
        </member>
        <member name="M:Microsoft.Psi.Audio.WasapiRender.StartRendering(System.Double,System.Int32,System.Single,Microsoft.Psi.Audio.WaveFormat)">
            <summary>
            Starts rendering audio data.
            </summary>
            <param name="maxBufferSeconds">
            The maximum duration of audio that can be buffered for playback.
            </param>
            <param name="targetLatencyInMs">
            The target maximum number of milliseconds of acceptable lag between
            playback of samples and live sound being produced.
            </param>
            <param name="gain">
            The gain to be applied prior to rendering the audio.
            </param>
            <param name="inFormat">
            The input audio format.
            </param>
        </member>
        <member name="M:Microsoft.Psi.Audio.WasapiRender.AppendAudio(System.Byte[],System.Boolean)">
            <summary>
            Appends audio buffers to the render queue. Audio will be rendered as soon as possible
            if <see cref="M:Microsoft.Psi.Audio.WasapiRender.StartRendering(System.Double,System.Int32,System.Single,Microsoft.Psi.Audio.WaveFormat)"/> has previously been called.
            </summary>
            <param name="audioBuffer">The audio buffer to be rendered.</param>
            <param name="overwritePending">
            If true, then the internal buffer of audio pending rendering may be overwritten. If false,
            the call will block until there is sufficient space in the buffer to accommodate the audio
            data. Default is false.
            </param>
        </member>
        <member name="M:Microsoft.Psi.Audio.WasapiRender.StopRendering">
            <summary>
            Stops rendering audio data.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.WasapiRender.AudioDataRequestedCallback(System.IntPtr,System.Int32,System.Int64@)">
            <summary>
            Callback function that is passed to WASAPI to call whenever it is
            ready to receive new audio samples for rendering.
            </summary>
            <param name="dataPtr">
            Pointer to the native buffer that will receive the new audio data.
            </param>
            <param name="length">
            The maximum number of bytes of audio data that may be copied into pbData.
            </param>
            <param name="timestamp">
            The timestamp in 100-ns ticks of the first sample in data.
            </param>
            <returns>
            Returns the actual number of bytes copied into dataPtr.
            </returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.WasapiRender.AudioVolumeCallback(Microsoft.Psi.Audio.ComInterop.AudioVolumeNotificationData)">
            <summary>
            Callback function that is passed to the audio endpoint to call whenever
            there is a new audio volume notification.
            </summary>
            <param name="data">
            The audio volume notification data.
            </param>
        </member>
        <member name="T:Microsoft.Psi.Audio.AudioDataRequestedCallback">
            <summary>
            The callback delegate that is invoked whenever more audio data is requested by the renderer.
            </summary>
            <param name="data">A pointer to the audio buffer.</param>
            <param name="length">The length of the audio buffer.</param>
            <param name="timestamp">The timestamp of the audio.</param>
            <returns>The number of bytes that were copied into the audio buffer.</returns>
        </member>
        <member name="T:Microsoft.Psi.Audio.WasapiRenderClient">
            <summary>
            The WASAPI renderer class.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.WasapiRenderClient.#ctor(Microsoft.Psi.Audio.ComInterop.IMMDevice)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Audio.WasapiRenderClient"/> class.
            </summary>
            <param name="endpoint">The audio endpoint device.</param>
        </member>
        <member name="P:Microsoft.Psi.Audio.WasapiRenderClient.MixFormat">
            <summary>
            Gets the mix format of the audio renderer.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Audio.WasapiRenderClient.BytesRendered">
            <summary>
            Gets number of bytes of audio data rendered so far.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.WasapiRenderClient.Dispose">
            <summary>
            Disposes the <see cref="T:Microsoft.Psi.Audio.WasapiRenderClient"/> object.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.WasapiRenderClient.Initialize(System.Int32,System.Single,Microsoft.Psi.Audio.WaveFormat,Microsoft.Psi.Audio.AudioDataRequestedCallback)">
            <summary>
            Initialize the renderer.
            </summary>
            <param name="engineLatency">
            Number of milliseconds of acceptable lag between playback of samples and live sound being produced.
            </param>
            <param name="gain">
            The gain to be applied to the audio before rendering.
            </param>
            <param name="inFormat">
            The format of the input audio samples to be rendered. If this is NULL, the current default audio
            format of the renderer device will be assumed.
            </param>
            <param name="callback">
            Callback function delegate which will supply the data to be rendered.
            </param>
        </member>
        <member name="M:Microsoft.Psi.Audio.WasapiRenderClient.Start">
            <summary>
             Start rendering audio data.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.WasapiRenderClient.Stop">
            <summary>
            Stop the renderer.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.WasapiRenderClient.DoRenderThread">
            <summary>
            Render thread - reads audio, processes it with a resampler and renders it to WASAPI.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.WasapiRenderClient.ProcessResamplerInput">
            <summary>
            Read audio data and feed it as input to audio resampler.
            </summary>
            <returns>The number of bytes read.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.WasapiRenderClient.ProcessResamplerOutput">
            <summary>
            Get data output from audio resampler and render it to WASAPI.
            </summary>
            <returns>The number of bytes rendered.</returns>
        </member>
        <member name="M:Microsoft.Psi.Audio.WasapiRenderClient.InitializeAudioEngine">
            <summary>
            Initialize WASAPI in timer driven mode, and retrieve a render client for the transport.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Audio.WasapiRenderClient.LoadFormat">
            <summary>
            Retrieve the format we'll use to render samples.
            We use the Mix format since we're capturing in shared mode.
            </summary>
        </member>
    </members>
</doc>
